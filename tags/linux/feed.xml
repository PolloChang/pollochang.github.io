<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on PolloChang 工作筆記</title>
    <link>http://pollochang.work/tags/linux/</link>
    <description>Recent content in linux on PolloChang 工作筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Sun, 01 Jun 2025 12:20:50 +0800</lastBuildDate><atom:link href="http://pollochang.work/tags/linux/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploy AIX in KVM</title>
      <link>http://pollochang.work/worknot/deploy-aix-in-kvm/</link>
      <pubDate>Sun, 01 Jun 2025 12:20:50 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/deploy-aix-in-kvm/</guid>
      <description>最近工作上碰觸到 AIX ，為了驗證自己寫的腳本能在 AIX 上執行，因此我在 KVM 中建立 AIX 的虛擬機
執行環境 硬體環境 CPU: 11th Gen Intel® Core™ i5-1145G7 × 8 RAM: 32.0 GiB Operating System: Debian GNU/Linux 12 (bookworm) Kernel: Linux 6.1.0-35-amd64 Architecture: x86-64 Hardware Vendor: Dell Inc. Hardware Model: Latitude 5420 Firmware Version: 1.30.0 KVM: QEMU emulator version 7.2.17 (Debian 1:7.2+dfsg-7+deb12u13) 準備文件 ISO file: aix_7200-04-02-2027_1of2_072020.iso (sha256sum: adab6bbd266525d467b5d3af77aa241e97272a1df754318492c9d23e4881abbd) aix-quem-kvm.xml aix-quem-kvm.xml 文件內容
&amp;lt;domain type=&amp;#39;qemu&amp;#39;&amp;gt; &amp;lt;name&amp;gt;aix&amp;lt;/name&amp;gt; &amp;lt;uuid&amp;gt;808a3d10-32f3-433e-a18e-67c25310ddc1&amp;lt;/uuid&amp;gt; &amp;lt;memory unit=&amp;#39;KiB&amp;#39;&amp;gt;8388608&amp;lt;/memory&amp;gt; &amp;lt;currentMemory unit=&amp;#39;KiB&amp;#39;&amp;gt;8388608&amp;lt;/currentMemory&amp;gt; &amp;lt;vcpu placement=&amp;#39;static&amp;#39;&amp;gt;4&amp;lt;/vcpu&amp;gt; &amp;lt;os&amp;gt; &amp;lt;type arch=&amp;#39;ppc64&amp;#39; machine=&amp;#39;pseries-7.</description>
    </item>
    
    <item>
      <title>KVM 相關 disk</title>
      <link>http://pollochang.work/worknot/kvm-cli-disk/</link>
      <pubDate>Mon, 11 Nov 2024 22:20:18 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/kvm-cli-disk/</guid>
      <description>qemu-img convert -f raw -O qcow2 manage manage.qcow2 qcow2 轉 VMDisk qemu-img convert -f qcow2 -O vmdk zimbra9-ubuntu18.04 zimbra9-ubuntu18.04.vmdk 熱擴展磁碟 sudo virsh blockresize &amp;lt;vm_name&amp;gt; &amp;lt;disk_path&amp;gt; &amp;lt;size_in_bytes&amp;gt; qemu-img resize /kvm/win10 +20G qemu-img info /kvm/win10 [sudo] password for jameschang: image: /kvm/win10 file format: qcow2 virtual size: 40 GiB (42949672960 bytes) disk size: 39.8 GiB cluster_size: 65536 Format specific information: compat: 1.1 compression type: zlib lazy refcounts: true refcount bits: 16 corrupt: false extended l2: false 擴展完記得</description>
    </item>
    
    <item>
      <title>KVM 相關 VM</title>
      <link>http://pollochang.work/worknot/kvm-cli-vm/</link>
      <pubDate>Mon, 11 Nov 2024 22:20:18 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/kvm-cli-vm/</guid>
      <description>建立虛擬機器 KVM 新增硬碟
sudo qemu-img create -f qcow2 /home/jameschang/VMS/linux/debian9.qcow2 20G sudo qemu-img create -f qcow2 /kvm/zimbraBuild.qcow2 50G 查詢可用的作業系統 osinfo-query os | grep debian 查詢可以用的網路 sudo virsh net-list # 在 VM 中安裝 Ubuntu Linux 18.04（遠端主機） sudo virt-install --virt-type kvm --name debian9 --ram 4096 --disk /home/jameschang/VMS/linux/debian9.qcow2,format=qcow2 --network network=network1 --graphics vnc,listen=0.0.0.0,password=debian9 --noautoconsole --os-type=linux --os-variant=debian9 --cdrom=/data/softwares/linux/debian-9.13.0-amd64-netinst.iso virsh vncdisplay debian9 virsh iface-bridge wlp1s0 br0 virsh iface-bridge eth0 wlp1s0 sudo qemu-img create -f qcow2 /kvm/zimbra8-ubuntu20.04.qcow2 20G sudo virt-install --virt-type kvm --name zimbraBuild --ram 4096 --disk /kvm/zimbra8-ubuntu20.</description>
    </item>
    
    <item>
      <title>KVM 網路</title>
      <link>http://pollochang.work/worknot/kvm-cli-netowrk/</link>
      <pubDate>Mon, 11 Nov 2024 22:19:25 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/kvm-cli-netowrk/</guid>
      <description>KVM 網路 檢視網路 # 列出全部網路設定，包含未啟動的網路 ❯ sudo virsh net-list --all Name State Autostart Persistent ---------------------------------------------- default active yes yes private inactive no yes public active yes yes Name: 網路介面名稱 State: 目前狀態 active: 啟動 inactive: 未啟動 Autostart: 開機時自動啟動 yes: 開機時自動啟動 no: 開機時不自動啟動 Persistent: 永久保存 編輯網路 virsh net-list # 列出全部網路設定，包含未啟動的網路 virsh net-list --all virsh net-edit $NETWORK_NAME 编辑段落 &amp;lt;mtu size=&amp;#34;9000&amp;#34;/&amp;gt; &amp;lt;dhcp&amp;gt; &amp;lt;range start=&amp;#39;192.168.122.100&amp;#39; end=&amp;#39;192.168.122.254&amp;#39;/&amp;gt; &amp;lt;host mac=&amp;#39;52:54:00:ed:3c:bc&amp;#39; name=&amp;#39;winxp&amp;#39; ip=&amp;#39;192.168.122.2&amp;#39;/&amp;gt; &amp;lt;host mac=&amp;#39;52:54:00:19:1b:70&amp;#39; name=&amp;#39;loki&amp;#39; ip=&amp;#39;192.168.122.3&amp;#39;/&amp;gt; &amp;lt;host mac=&amp;#39;52:54:00:b8:f1:68&amp;#39; name=&amp;#39;gilLab&amp;#39; ip=&amp;#39;192.</description>
    </item>
    
    <item>
      <title>big-ip client linux 安裝</title>
      <link>http://pollochang.work/worknot/worknot-20241104-1/</link>
      <pubDate>Mon, 04 Nov 2024 15:32:49 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20241104-1/</guid>
      <description>https://&amp;lt;big-ip apm virtual server&amp;gt;/public/download/&amp;lt;file name&amp;gt;
Debian
linux_f5cli.x86_64.deb
linux_f5epi.x86_64.deb
linux_f5vpn.x86_64.deb
sudo apt install ./linux_f5*.deb 參考資料 K47922841: Using the Linux client f5fpc to connect to the BIG-IP APM network access for the first time </description>
    </item>
    
    <item>
      <title>telnet 替代方案: curl</title>
      <link>http://pollochang.work/worknot/worknot-20241030-2/</link>
      <pubDate>Wed, 30 Oct 2024 22:14:13 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20241030-2/</guid>
      <description>過去在偵測網路 port 可連接的狀況，會使用 telnet 這個指令測，但是新版的作業系統已經預設已經沒有安裝了。
現在的替代方案是 curl 指令，此方法在 windows 10 環境也適用
curl telnet://[IP]:[port] 讓我們來看一下差別，以下是 telnet 輸出的結果
❯ telnet 127.0.0.1 22 Trying 127.0.0.1... Connected to 127.0.0.1. Escape character is &amp;#39;^]&amp;#39;. SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u3 以下是 curl 輸出結果
❯ curl telnet://127.0.0.1:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u3 </description>
    </item>
    
    <item>
      <title>硬體設備-hba</title>
      <link>http://pollochang.work/worknot/worknot-20241030-1/</link>
      <pubDate>Wed, 30 Oct 2024 21:42:54 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20241030-1/</guid>
      <description>最近工作中遇到需要設定光纖設備，這邊我稍微紀錄一下過往常用的指令
查詢 hba 型號: ``
[root@test-host ~]# lspci -nn |egrep -i &amp;#34;fibre|hba&amp;#34; 17:00.0 Fibre Channel [0c04]: QLogic Corp. ISP2532-based 8Gb Fibre Channel to PCI Express HBA [1077:2532] (rev 02) 17:00.1 Fibre Channel [0c04]: QLogic Corp. ISP2532-based 8Gb Fibre Channel to PCI Express HBA [1077:2532] (rev 02) 重新掃描 scsi: echo &amp;quot;- - -&amp;quot; &amp;gt; /sys/class/scsi_host/&amp;lt;host&amp;gt;/scan
for host in ls /sys/class/scsi_host/;do echo &amp;#34;- - -&amp;#34; &amp;gt;/sys/class/scsi_host/${host}/scan; done 查詢 FC WWN: ``
[root@test-host ~]# cat /sys/class/fc_host/host11/port_name 0x21000024fg400000 [root@test-host ~]# cat /sys/class/fc_host/host12/port_name 0x21000024ff400000 </description>
    </item>
    
    <item>
      <title>AI幻覺導致我操作系統錯誤了</title>
      <link>http://pollochang.work/worknot/worknot-20241013-1/</link>
      <pubDate>Sun, 13 Oct 2024 22:19:03 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20241013-1/</guid>
      <description>TL;DR 剛剛在練習 KVM 指令時 一些不懂的地方直接問 Cheap GPT 遇到 AI 幻覺。在執行虛擬磁碟擴容到 60G 照著 GPT 指示做，結果擴充到 30TB。好險是在實驗室進行操作練習，如果是在正式環境可能或造成難以收復的系統災難。
錯誤指令如下
sudo virsh blockresize develop-pg-node-01 vda 32212254720 過程 詢問 AI 的紀錄
執行過程
 ╱  ~/Documents/wezoom/wezoom/wezoom-ISMS at 21:38:31  ❯ sudo virsh blockresize develop-pg-node-01 vda 32212254720 Block device &amp;#39;vda&amp;#39; is resized 結果 變成 30 TB，fuxxxxxxxxxxx !!! 我的實體硬碟也才 2T，嚴重超賣呀!!!
從虛擬機看也是一樣
此次錯誤解決方式 進行虛擬磁碟縮容
sudo qemu-img resize --shrink /var/lib/libvirt/images/develop-pg-node-01.qcow2 60G 預防方式 多多在 LAB 實驗操作練習吧。畢竟查 AI 或是各式文件100 次不如親手操作一次</description>
    </item>
    
    <item>
      <title>docker overlay2</title>
      <link>http://pollochang.work/worknot/worknot-20240719-1/</link>
      <pubDate>Fri, 19 Jul 2024 15:56:16 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240719-1/</guid>
      <description>經驗分享
linux /var/lib/docker/overlay2 這層目錄不能亂刪
刪了 本機的 docker image 通通不見
服務會瞬間死光光
以下是誤刪的解決方式
重啟 docker sudo systemctl restart docker
清除docker資源 docker system prune -a
重新匯入 docker image </description>
    </item>
    
    <item>
      <title>尋找作業系統帳號建立日期</title>
      <link>http://pollochang.work/worknot/worknot-20240717-1/</link>
      <pubDate>Wed, 17 Jul 2024 06:14:11 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240717-1/</guid>
      <description>weindows Write-Output &amp;#34;User,Birth&amp;#34; # 取得所有用戶名和主目錄路徑 $users = Get-WmiObject Win32_UserAccount | Where-Object { $_.LocalAccount -eq $true -and $_.SIDType -eq 1 } foreach ($user in $users) { $homeDir = &amp;#34;C:\Users\$($user.Name)&amp;#34; if (Test-Path $homeDir) { $creationTime = (Get-Item $homeDir).CreationTime $formattedTime = $creationTime.ToString(&amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;) Write-Output &amp;#34;$($env:COMPUTERNAME),$($user.Name),$formattedTime&amp;#34; } else { Write-Output &amp;#34;$($env:COMPUTERNAME),$($user.Name),-&amp;#34; } } Linux #!/bin/bash # 從 /etc/passwd 文件中讀取所有用戶名和主目錄路徑 while IFS=: read -r username _ _ _ _ home_dir _; do if [ -d &amp;#34;$home_dir&amp;#34; ]; then # 使用 stat 命令獲取主目錄資訊 stat_output=$(stat &amp;#34;$home_dir&amp;#34;) birth_time=$(echo &amp;#34;$stat_output&amp;#34; | grep &amp;#39;Birth&amp;#39; | awk &amp;#39;{print $2 &amp;#34; &amp;#34; $3}&amp;#39;) if [ -n &amp;#34;$birth_time&amp;#34; ]; then formatted_time=$(date -d &amp;#34;$birth_time&amp;#34; +&amp;#39;%Y-%m-%d %H:%M:%S&amp;#39;) echo &amp;#34;$(hostname),$username,$formatted_time&amp;#34; else birth_time=$(echo &amp;#34;$stat_output&amp;#34; | grep &amp;#39;Change&amp;#39; | awk &amp;#39;{print $2 &amp;#34; &amp;#34; $3}&amp;#39;) if [-n &amp;#34;$birth_time&amp;#34;]; then formatted_time=$(date -d &amp;#34;$birth_time&amp;#34; +&amp;#39;%Y-%m-%d %H:%M:%S&amp;#39;) else echo &amp;#34;$(hostname),$username,-&amp;#34; fi fi else echo &amp;#34;$(hostname),$username,-&amp;#34; fi done &amp;lt; /etc/passwd </description>
    </item>
    
    <item>
      <title>故障排除: Linux 連接 windows AD</title>
      <link>http://pollochang.work/worknot/troubleshooting-linux-connection-to-windows-ad/</link>
      <pubDate>Mon, 08 Jul 2024 22:20:49 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/troubleshooting-linux-connection-to-windows-ad/</guid>
      <description>環境 AD server: windows server 2022 Client server: Oracle Linux 9
症狀: 無法抓取 AD 新資訊 [root@client-server ~]# id testacconut id: ‘testacconut’: no such user 問題排除步驟 # 退出當前 AD 領域。 realm leave # 停止 sssd 服務。 systemctl stop sssd # 確保舊的 AD 資料被清除。 sudo rm -rf /var/lib/sss/db/* sudo rm -rf /var/lib/sss/mc/* sudo rm -rf /var/lib/sss/secrets/* sudo rm -rf /var/lib/sss/pipes/* sudo rm -rf /var/lib/sss/gpo_cache/* sudo rm -rf /var/cache/realmd/* # 重新加入新的 AD 領域。 realm join --user=adManager ad.</description>
    </item>
    
    <item>
      <title>設定 Linux 檔案瀏覽器 Files 預設的 Columns</title>
      <link>http://pollochang.work/worknot/worknot-20240701-1/</link>
      <pubDate>Mon, 01 Jul 2024 09:48:08 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240701-1/</guid>
      <description> 使用以下命令來查看當前設置： gsettings get org.gnome.nautilus.list-view default-visible-columns 設置你想要的欄位，例如： gsettings set org.gnome.nautilus.list-view default-visible-columns &amp;#34;[&amp;#39;name&amp;#39;, &amp;#39;size&amp;#39;, &amp;#39;type&amp;#39;, &amp;#39;date_modified&amp;#39;]&amp;#34; default-visible-columns values
name: 檔案或目錄的名稱 size: 檔案的大小 type: 檔案的類型 date_modified: 檔案的修改日期 date_accessed: 檔案的訪問日期 owner: 檔案的所有者 group: 檔案的群組 permissions: 檔案的權限 detailed_type: 檔案的詳細類型（例如“MPEG-4 影片”、“PNG 圖片”） </description>
    </item>
    
    <item>
      <title>putty 編譯安裝</title>
      <link>http://pollochang.work/worknot/worknot-20240605-1/</link>
      <pubDate>Wed, 05 Jun 2024 22:52:47 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240605-1/</guid>
      <description>編譯安裝 下載 putty wget https://the.earth.li/~sgtatham/putty/latest/putty-0.81.tar.gz tar -zxf putty-0.81.tar.gz cd putty-0.81 建立 catch cmake . ❯ cmake . -- The C compiler identification is GNU 12.2.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /usr/bin/cc - skipped -- Detecting C compile features -- Detecting C compile features - done -- Found Git: /usr/bin/git (found version &amp;#34;2.39.2&amp;#34;) -- Looking for sys/auxv.</description>
    </item>
    
    <item>
      <title>CLI 檢查網站憑證</title>
      <link>http://pollochang.work/worknot/worknot-20240426/</link>
      <pubDate>Fri, 26 Apr 2024 07:00:46 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240426/</guid>
      <description>curl curl https://www.google.com -v -k 2&amp;gt;&amp;amp;1 | grep -E &amp;#34;Connected to|subject|expire&amp;#34; 執行結果 ❯ curl https://www.google.com -v -k 2&amp;gt;&amp;amp;1 | grep -E &amp;#34;Connected to|subject|expire&amp;#34; * Connected to www.google.com (2404:6800:4012:2::2004) port 443 (#0) * subject: CN=www.google.com * expire date: Jun 10 20:38:48 2024 GMT &amp;lt; expires: -1 &amp;lt; set-cookie: 1P_JAR=2024-04-25-23; expires=Sat, 25-May-2024 23:03:14 GMT; path=/; domain=.google.com; Secure &amp;lt; set-cookie: AEC=AQTF6Hw4gUm8n5W0uPUDTe6vEa8fTROwT6DEAUWQ6FTKMp52DrhWnROmmw; expires=Tue, 22-Oct-2024 23:03:14 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax &amp;lt; set-cookie: NID=513=TZnGjLI3KvFu_SLuZJCrPktY6GMHeuK3Hg8ht9ojqTr_OgX460hGPFUccru0PZr2J1pWw_mynjevt8eTyWu0pN9gPXi4hcJkFUQzR9SJlTfypnftjNlM9CGEu1956tVk67u6tWkrNRa2zi8QdXzULlXJZ2wO1tBrzCGnmRJ4nyg; expires=Fri, 25-Oct-2024 23:03:14 GMT; path=/; domain=.</description>
    </item>
    
    <item>
      <title>linux 資料基礎分析</title>
      <link>http://pollochang.work/worknot/worknot-20240425/</link>
      <pubDate>Thu, 25 Apr 2024 22:16:23 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240425/</guid>
      <description> grep: 過濾資料 grep 要過濾出的資料 exampleFileSource.log &amp;gt; exampleFile.log cut 切除每行前 60 個字元 cut -b 60- exampleFile.log &amp;gt; exampleFile.2.log sort: 類似 sql distinct 效果 grep 要過濾出的資料 exampleFile.2.log | sort --unique 分析 message IP grep &amp;#34;martian source&amp;#34; messages | grep -oE &amp;#39;([0-9]{1,3}\.){3}[0-9]{1,3}&amp;#39; &amp;gt;&amp;gt; messages-IP.log sort messages-IP.log | uniq -c | sort -nr </description>
    </item>
    
    <item>
      <title>html轉pdf-wkhtmltopdf</title>
      <link>http://pollochang.work/post/2024-02-28-html%E8%BD%89pdf/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-html%E8%BD%89pdf/</guid>
      <description>官方網站-wkhtmltopdf
安裝檔 wkhtmltox_0.12.6.1-2.bullseye_amd64.deb CLI wkhtmltopdf 附件二-OS-作業系統日誌-差異備份-20231026_tmp.html 附件二-OS-作業系統日誌-差異備份-20231026.pdf </description>
    </item>
    
    <item>
      <title>Linux 壓縮相關</title>
      <link>http://pollochang.work/post/2024-02-28-%E5%A3%93%E7%B8%AE%E7%9B%B8%E9%97%9C/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E5%A3%93%E7%B8%AE%E7%9B%B8%E9%97%9C/</guid>
      <description>7z 安裝 sudo apt-get install p7zip-full p7zip-rar 解壓縮到指定輸出目錄 7z x &amp;#34;dir1.zip&amp;#34; -o &amp;#34;dir1&amp;#34; zip 安裝 apt install zip unzip 解壓縮到指定輸出目錄 unzip -q test.zip -d /tmp 參考資料 Linux 安裝 7zip</description>
    </item>
    
    <item>
      <title>Linux 字型安裝</title>
      <link>http://pollochang.work/post/2024-02-28-%E5%AD%97%E5%9E%8B%E5%AE%89%E8%A3%9D/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E5%AD%97%E5%9E%8B%E5%AE%89%E8%A3%9D/</guid>
      <description>019.字型安裝 apt 安裝 sudo apt install ttf-mscorefonts-installer sudo apt install ttf-wqy-microhei ttf-wqy-zenhei # 中文字型 cd ~/下載 sudo mkdir -p /usr/share/fonts/custom &amp;amp;&amp;amp;\ sudo wget -P /usr/share/fonts/custom https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf &amp;amp;&amp;amp;\ sudo wget -P /usr/share/fonts/custom https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf &amp;amp;&amp;amp;\ sudo wget -P /usr/share/fonts/custom https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf &amp;amp;&amp;amp;\ sudo fc-cache -v -f </description>
    </item>
    
    <item>
      <title>Linux 硬體檢測相關指令</title>
      <link>http://pollochang.work/post/2024-02-28-%E7%A1%AC%E9%AB%94%E6%AA%A2%E6%B8%AC%E7%9B%B8%E9%97%9C%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E7%A1%AC%E9%AB%94%E6%AA%A2%E6%B8%AC%E7%9B%B8%E9%97%9C%E6%8C%87%E4%BB%A4/</guid>
      <description>檢查住機板型號 ❯ sudo dmidecode -t 2 # dmidecode 3.3 Getting SMBIOS data from sysfs. SMBIOS 3.0.0 present. Handle 0x0002, DMI type 2, 15 bytes Base Board Information Manufacturer: ASUSTeK COMPUTER INC. Product Name: PRIME B250M-K Version: Rev X.0x Serial Number: 161190432104045 Asset Tag: Default string Features: Board is a hosting board Board is replaceable Location In Chassis: Default string Chassis Handle: 0x0003 Type: Motherboard Contained Object Handles: 0 檢查USB 等設備 udevadm monitor KERNEL[3434.</description>
    </item>
    
    <item>
      <title>Linux 筆電常用命令</title>
      <link>http://pollochang.work/post/2024-02-28-%E7%AD%86%E9%9B%BB%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E7%AD%86%E9%9B%BB%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>檢查電池容量 upower -i /org/freedesktop/UPower/devices/battery_BAT0 </description>
    </item>
    
    <item>
      <title>Linux 系統時間</title>
      <link>http://pollochang.work/post/2024-02-28-%E6%99%82%E9%96%93/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E6%99%82%E9%96%93/</guid>
      <description>sudo date -s &amp;#34;2022/05/05 18:44:15&amp;#34; 若要查詢硬體時鐘（RTC）的時間，可以使用 hwclock：
若要將系統時間寫入硬體時鐘，可以使用 -w 參數：
sudo hwclock -w 係統時區校正 先設定時區 sudo timedatectl set-timezone Asia/Taipei ╰─ timedatectl Local time: Wed 2022-05-04 16:21:52 CST Universal time: Wed 2022-05-04 08:21:52 UTC RTC time: Wed 2022-05-04 08:21:52 Time zone: Asia/Taipei (CST, +0800) System clock synchronized: yes NTP service: active RTC in local TZ: no 校時查詢 [aaa@test ~]$ ntpq -p remote refid st t when poll reach delay offset jitter ============================================================================== *172.</description>
    </item>
    
    <item>
      <title>Linux 連接iPhone讀取照片</title>
      <link>http://pollochang.work/post/2024-02-28-%E9%80%A3%E6%8E%A5iphone%E8%AE%80%E5%8F%96%E7%85%A7%E7%89%87/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E9%80%A3%E6%8E%A5iphone%E8%AE%80%E5%8F%96%E7%85%A7%E7%89%87/</guid>
      <description>安裝 iFuse jameschang@debian:~$ sudo apt-get install ifuse Reading package lists... Done Building dependency tree... Done Reading state information... Done The following NEW packages will be installed: ifuse 0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded. Need to get 15.7 kB of archives. After this operation, 48.1 kB of additional disk space will be used. Get:1 http://deb.debian.org/debian bullseye/main amd64 ifuse amd64 1.1.4~git20181007.3b00243-1 [15.7 kB] Fetched 15.7 kB in 2s (7,099 B/s) Selecting previously unselected package ifuse.</description>
    </item>
    
    <item>
      <title>linux與windows共享目錄 samba</title>
      <link>http://pollochang.work/post/2024-02-28-linux%E8%88%87windows%E5%85%B1%E4%BA%AB%E7%9B%AE%E9%8C%84/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-linux%E8%88%87windows%E5%85%B1%E4%BA%AB%E7%9B%AE%E9%8C%84/</guid>
      <description>安裝samba sudo apt install samba 設定共享目錄 sudo vim /etc/samba/smb.conf
[localgit] comment = dadatong path = /home/pollochang/data/localGit browsable = yes guest ok = no read only = no create mask = 0755 [software] comment = dadatong path = /home/pollochang/data/software browsable = yes guest ok = no read only = yes create mask = 0755 [data] comment = dadatong path = /home/jameschang/data browsable = yes guest ok = no read only = no create mask = 0755 [tes1] comment = tes1 path = /home/jc/tes1 browsable = yes guest ok = no read only = no workgroup = oinstall create mode = 0775 #從Client端建立檔案後，建立之檔案權限會設定為create mode的值 directory mode = 2770 #從Client端建立目錄後，建立之目錄權限會設定為directory mode的值 valid users = @oinstall #可登入SAMBA的帳號白名單列表，可直接指定帳號清單，或是以 @開頭表示可使用的群組，指定的user一定要是系統上存在的帳號，否則是無效的。如 root, @user 表示允許root帳號與 @user群組中的帳號使用 新增 samba 的使用者 pollochang@pollochang-GL72-7RDX:~$ sudo smbpasswd -a jameschang New SMB password: Retype new SMB password: Failed to add entry for user jameschang.</description>
    </item>
    
    <item>
      <title>sell 日誌 function</title>
      <link>http://pollochang.work/post/2024-02-28-shell%E7%9B%B8%E9%97%9C/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-shell%E7%9B%B8%E9%97%9C/</guid>
      <description>日誌時間 #日誌名稱 log=&amp;#34;./log/checkWbsite.log&amp;#34; #操作日誌存放路徑 fsize=2000000 #如果日誌大小超過上限，則儲存舊日誌，重新生成日誌檔案 exec 2&amp;gt;&amp;gt;$log #如果執行過程中有錯誤資訊均輸出到日誌檔案中 #日誌函式 #引數 #引數一，級別，INFO ,WARN,ERROR #引數二，內容 #返回值 function zc_log(){ #判斷格式 if [ 2 -gt $# ] then echo &amp;#34;parameter not right in zc_log function&amp;#34; ; return ; fi if [ -e &amp;#34;$log&amp;#34; ] then touch $log fi #當前時間 local curtime; curtime=`date +%Y%m%d%H%M%S` #判斷檔案大小 local cursize ; cursize=`cat $log | wc -c` ; if [ $fsize -lt $cursize ] then mv $log $curtime&amp;#34;.out&amp;#34; touch $log ; fi #寫入檔案 echo &amp;#34;$curtime $*&amp;#34; &amp;gt;&amp;gt; $log; } </description>
    </item>
    
    <item>
      <title>來架個網站吧-01.前言</title>
      <link>http://pollochang.work/post/1000-01.%E5%89%8D%E8%A8%80/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-01.%E5%89%8D%E8%A8%80/</guid>
      <description>來架個網站吧-01.前言 tags: 來架個網站吧 這一系列的文章，我想把我自己學習架設網站的學習過程一步一步敘述出來，從零基礎開始到一個網站的誕生。順便在撰寫文章的過程中，更精進這方面的技術與吸收。
目錄 來架個網站吧-1.前言 為什麼要開發網站 在開發網站之前，通常我會先問一句：「未什麼要開發網站？」。這一句非常重要。之所以重要的原因是，今天開發一個網站是一件複雜的事情，當然也有可以是一件很簡單的事情。從簡單的說起，一台數莓派就可完成一個網站架設了，複雜到使用多個雲進行架設。不過這一系列我不會講如何使用 Google Cloud、 Amazon Web Services等等三方提供的雲端服務架設，因為在下小弟我沒有經驗。
所以我的鐵人賽可以收工打包回家啦！
這三十天，小弟我會帶大家如何從零開始打造一個自己專屬網站，帶給不一樣 很傳統 的網站系統。</description>
    </item>
    
    <item>
      <title>來架個網站吧-02.技術分工-1: 需求訪談與分析</title>
      <link>http://pollochang.work/post/1000-02.%E6%8A%80%E8%A1%93%E5%88%86%E5%B7%A5-%E9%9C%80%E6%B1%82%E8%A8%AA%E8%AB%87%E8%88%87%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-02.%E6%8A%80%E8%A1%93%E5%88%86%E5%B7%A5-%E9%9C%80%E6%B1%82%E8%A8%AA%E8%AB%87%E8%88%87%E5%88%86%E6%9E%90/</guid>
      <description>來架個網站吧-02.技術分工-1: 需求訪談與分析 tags: 來架個網站吧 我是目錄
需求訪談與分析 如今網站系統是複雜的 複雜的永遠都是人 ，一個完整的網站精髓在於完整體驗。所謂完整除了包含漂亮的網頁介面(UI)、流暢的使用者設計(UX)、進行巧江蕙演唱會門票不怕網路塞車(效能)、不怕在網站輸入手機電話號碼後三十分鐘就接到詢問貸款的電話(安全)，上述都是現今網站的基本要素，最重要在於進入當前的網站是為了要完成蛇模事情？
為了探討「使用目的」這件事，網站的工程人員有專人、專責？處理需求蒐集，並且依據所蒐集到的資料整理成一個網站業務流程。簡單如：線上字典，複雜如：Google Cloud。
以下是線上字典的業務流程:
使用者進入網站 -&amp;gt; 使用者輸入要搜尋的文字 -&amp;gt; 使用者執行查詢 -&amp;gt; 網站系統搜尋資料庫 -&amp;gt; 網站系統將搜尋的結果拋回使用者 -&amp;gt; 使用者獲得訊息 上述的網站業務流程看似簡單，但是加入以下條件，也有可能讓網站的業務流程開始變得複雜：
每分鐘都會有1萬名使用者進行操作。 則網站的業務流程有可能會變成這樣
使用者進入網站 -&amp;gt; 使用者輸入要搜尋的文字 網站系統搜尋資料庫 ↗ ↘ (快取沒有資料) ↘ ↗ ↘ -&amp;gt; 使用者執行查詢 -&amp;gt; 網站系統從搜尋快取資料庫 ↘ ↘---------------------&amp;gt; 網站系統將搜尋的結果拋回使用者 -&amp;gt; 使用者獲得訊息 通常每加一項對網站的要求(需求)，在設計網站功能規劃時就得多加一項以上功能或是導入令一向技術。因此一個「完整體驗」的網站通常需求訪談與分析的工作不可少。</description>
    </item>
    
    <item>
      <title>來架個網站吧-03.技術分工-2: 需求訪談</title>
      <link>http://pollochang.work/post/1000-03.%E6%8A%80%E8%A1%93%E5%88%86%E5%B7%A5-%E9%9C%80%E6%B1%82%E8%A8%AA%E8%AB%87/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-03.%E6%8A%80%E8%A1%93%E5%88%86%E5%B7%A5-%E9%9C%80%E6%B1%82%E8%A8%AA%E8%AB%87/</guid>
      <description>來架個網站吧-03.技術分工-2: 需求訪談 tags: 來架個網站吧 我是目錄
建置一個系統中最重要的環節是什麼？開發技術？酷炫時尚的操作介面？
我覺得最重要的一環就是先釐清做系統是為了要完成那些事情，例如：記帳、管理團隊任務、想知道字的讀音、字詞的意思&amp;hellip;&amp;hellip;等。在這一系列我以字典為需求出發。
需求出現: 「霽」這個字怎念 先在我接收到一項需求：字要怎麼念。
首先在回答字要怎念的時候，以下是我腦中迴路會出現的思路：
誰在問？ 學生。 為什麼要問？ 因為同學的名字他不會念。 在什麼時候想到這個問題的？ 載課堂上的時候。 在哪裡想到的這個問題？ 在305教室。 要回答哪些訊息？ 尋找字的讀音。 上述的的思路即是需求訪談時需要向訪談者探討的問題，必須要把自己當成對方肚子李的蛔蟲理解它提出問題(需求)背後的目的。
另外，在需求訪談的過程中，有時需要幫受訪者衍生提問來探究更細節的需求。例如：
誰在問？ 請問你是新來的學生嘛？ 為什麼要問？ 最近是不是很長遇到不會念的姓名？ 在什麼時候想到這個問題的？ 除了在課堂上的時候想問，在哪時候也有相同的疑惑？ 在哪裡想到的這個問題？ 除了在教室以外，在圖書館已會遇到一樣狀況嘛？ 要回答哪些訊息？ 你想知道這個字的含意嘛？ 上述就是我在工作實務中常用到的思路，當然僅憑這一點思方式仍然是不夠的，有時候也會向訪談者提出需求相關的文件，或是親身體驗對方的困境，來更深一步探討對方所面臨的需求。
文字紀錄的重要性-人性本忘 我深深相信一件事: 人性本忘。
忘記，是人類與生性來的本能。因此文字紀錄是很種要的事情，這邊不推薦用語音或是影像紀錄方式，主要是查閱、搜索不易。剛剛有提到「需求訪談完成的當下最好先整理初對方的需求與對方初步確認」這項動作，原因是訪談完當下通常是雙方記憶最清晰的時間，也會是日後回想需求的起始點。
還有一項是請訪問者與受訪者雙方見證需求文字敘述的真實性，因為有一方對一項需求不認帳，對系統功能有可能是重大的。
中介人 在商業開發上，有時候訪問者與受訪者的關係是屬於不信任的，必要時可以請出雙方信任的第三者參與需求訪談。避免日後開發完系統功能卻無法完成上線的窘境。
以上是我這幾年在網站領域的一點心得，有疏漏請不吝色指教。
需求文件 為了寫這系列的文章，我特異簡化很多需求訪談中的詳細，以下是簡便板的需求文件:
今天是9月10日，在世新大學有一位從美國來台灣就讀的大一年級的新生，同時他也是華僑說著一口流利的中文，但是不太認識中文字。無法將講義、同學的名子的文字念出發音及理解字詞的意思。同學希望有一個網站可以很順手的查詢字的意思。 </description>
    </item>
    
    <item>
      <title>來架個網站吧-04.技術分工-3: 需求分析</title>
      <link>http://pollochang.work/post/1000-04.%E6%8A%80%E8%A1%93%E5%88%86%E5%B7%A5-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-04.%E6%8A%80%E8%A1%93%E5%88%86%E5%B7%A5-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/</guid>
      <description>來架個網站吧-04.技術分工-3: 需求分析 tags: 來架個網站吧 我是目錄
需求分析 經過依整天的需求訪談，可以說是燒掉不少腦細胞呀！不過訪談完成之後必須得得做整理，我相信經過一整晚的睡眠整理？前一天的需求應該都在腦袋瓜中整理的有理有序吧？但是當工程師拿到訪談的文件，有絕大部分的機率不會著手開發。這是為什呢？
想想看昨天的需求文件吧：
今天是9月10日，在世新大學有一位從美國來台灣就讀的大一年級的新生，同時他也是華僑說著一口流利的中文，但是不太認識中文字。無法將講義、同學的名字的文字念出發音及理解字詞的意思。同學希望有一個網站可以很順手的查詢字的意思。 但是在工程師的腦中有 接收資料、分析資料、拋出資料，在前端工程的眼中只有如何呈現給使用者資訊 僅憑這一點敘述，會讓各個不同的工程師發會想像完成網站的一部分。以系統流程來說好了：後端工程師可能會會認為使用者(大學生)在網頁中輸入任何一個中文字，將使用者輸入的內容丟進資料庫查詢出結果，再將查詢結果資訊丟給使用者即可。在前端工程師的角度可能就是畫出一個可以給使用者輸入的文字方塊，丟給伺服器查詢，等到伺服器回傳資料再顯示給使用者。如果這時候沒有事先規範好前端、後端要如何完成查「查尋文字意思」的系統流程，有很大個機率會出現前端丟給後端資料，後端接收不到的狀況，反之亦然。我這邊只是舉個前後端的例子，在我的工作經驗中，有的情況是一條龍流程：需求訪談、需求分析、系統開發、系統測試、系統上線;也有情況是，多人一起完程一個階段任入。一個人在不同時期點會有不同的思考角度，例如：我在大學一直追求Java的程式如何寫到簡潔，到了現在是如何透過程式撰寫優美的SOP。更何況是兩人以上的合作模式。了減少不同思考角度間的溝通成本，因此在需求分析階段需要把下列事項定義清楚：
系統使用者 誰會使用系統 系統目標 這個系統是為了處理什模事情 系統流程 要如何完成事情 隱藏的需求 拿到需求敘述後，第一步事先依敘述畫出一個資訊流程：
(大學生)在網頁中輸入要搜尋的文字 (系統)在資料庫中搜尋文字的資料 (系統)將文字資訊呈現在網頁中 (大學生)在網頁中知道文字的資訊 畫完資訊流程後，會發現「資料庫」裡面的資料從哪裡來？裡面的資料誰要輸入？
所以這就是在需求訪談的結果沒有提及的隱藏需求，通常遇到這種需求會需要再向受訪者確認，更糟的是由分析師自行發揮想像力因應隱藏需求的設計方案。以下就是這次舉例隱藏需求的設計方案：
由志願者將中文「字」、「詞」的文意資訊，在網頁中輸入儲存至系統中。 系統使用者 在上述的需求敘述中，有一個明確的使用者:「不識字的人」</description>
    </item>
    
    <item>
      <title>來架個網站吧-05.技術分工-4: 系統開發</title>
      <link>http://pollochang.work/post/1000-05.%E6%8A%80%E8%A1%93%E5%88%86%E5%B7%A5-%E7%B3%BB%E7%B5%B1%E9%96%8B%E7%99%BC/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-05.%E6%8A%80%E8%A1%93%E5%88%86%E5%B7%A5-%E7%B3%BB%E7%B5%B1%E9%96%8B%E7%99%BC/</guid>
      <description>來架個網站吧-05.技術分工-4: 系統開發 tags: 來架個網站吧 我是目錄
需求訪談完成之後就是開始動工啦～
已目前的經驗來說，在需求訪談與分析階段，技術能不能達到要求都不是重點，本身的重點是技術如何滿足需求。以目前大部分公司的開發階段會切成以下類別：
前端 後端 前端 與 後端 在網站工程中，常常聽到「前端」與「後端」，但是什麼是前端？什麼是後端？
以我自己本身的經驗，對一般人比較能理解的說法是：用瀏覽器開一個網站，眼睛看得到絕大部分都是前端技術，眼睛看不到的都是後端技術。但是在時務經驗中，前端技術也可以寫後端，例如：Note.js。後端技術也可以應用在瀏覽器，例如：Java Applet。原則上技術本質是中性的，沒有絕對只有適合而已。在工作中，後端工程師也會需要處理前端丟過來的問題，進而協助前端如何處理資料傳輸的問題。前端也會需要如何用JavaScript產生文件的時後。在網站領域做了一段時間，兩端多少都需要碰到，只是早晚問題。
這一系列開始，我會介紹程式基礎。程式語言基礎的部份，我選擇JAVA。沒有其他原因，就我自己比較熟悉而已。接下來會介紹資料資料庫，以及如何操作。整體後端大略介紹完後，不會開始介紹前端基礎技術HTML、CSS、JavaScript，因為我真的不懂。
前端 前端領域在我剛開始進入這個領域時只需要下列技能:
切版 HTML CSS javaScript 現在除了要會切版之外，還要學會如何接API、做OAuth 2.0&amp;hellip;&amp;hellip;等等，幾乎快跟五年前的後端處理的事情融合了，只能說資訊技術前進的很快。當然在這塊領域上我也只能follow大致上的方向，畢竟時間與經歷有限。所以無法帶給大家深廣的資訊。
後端 後端的領域中，不外乎是處理業務邏輯為主，當然偶爾處理一下古老前後端不分離的技術框架，例如：JSP。
10幾年前，剛接觸資訊領域時當時是以JEE框架為主流，也就是良葛格當時的主力作品:Servlet/JSP，然而在五年前踏入這個行業時，Spring則是當時火紅的技術框架，當時的所有的技術論壇真的是春天滿天飛呀～
資料庫 資料庫規劃開發也是在網站應用系統功能中，佔重要比重很高的一向技術。因為每個網站近乎一定有資料庫運作。在這個領域我認為是最難處理的一部分，因為沒有什麼好或不好的資料設計。
為什麼這樣說？
以規劃主鍵來說：雙主鍵很適合做報表產製為目的的設計，因為後續撈報表很容易知道這張資料表的要紀錄的業務主要資訊。流水主鍵設計很適合做物件導向李的資料，一筆資料代表一個物件。
另外，還要依需求資料與硬體規劃等設計合適的資料型態、索引、table space、資料表分頁、資料庫分庫。
在資料庫的運作上也得考慮要做或能不能做高可用性(high availability)。
虛擬 x 容器 這邊講的虛擬是指作業系統安裝在虛擬環境中，如: VMWare。容器，例如: docker。
在網站系統當中，通常會直接採用虛擬化服務，因為可以靈活配置系統運算效能。在網站應用程式伺服器通常會配置在容器中，容器有比虛擬機更靈活的水平擴展能力，建立一容器服務可以在短短的幾秒鐘完成服務部署。
系統測試 開發完成之後，一定要做測試而且最好是單元測試。
大部分的人一定會跟你說：「要做單元測試。」就好比參加只考時考試券寫完要做檢查一樣(話說指考好像沒了)。但現實是，開發完成之後，通常隔天系統就要交付給客戶測試啦～
台灣？的環境使然，雖然現在無法做、明天還是無法做。
只要提倡再久一點，讓名為「滿天窗的系統bug」的子彈再飛一會兒或許客戶就會重視，騰出專案時間與預算來做。</description>
    </item>
    
    <item>
      <title>來架個網站吧-06.技術分工-5: 系統維運</title>
      <link>http://pollochang.work/post/1000-06.%E6%8A%80%E8%A1%93%E5%88%86%E5%B7%A5-%E7%B3%BB%E7%B5%B1%E7%B6%AD%E9%81%8B/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-06.%E6%8A%80%E8%A1%93%E5%88%86%E5%B7%A5-%E7%B3%BB%E7%B5%B1%E7%B6%AD%E9%81%8B/</guid>
      <description>來架個網站吧-06.技術分工-5: 系統維運 tags: 來架個網站吧 我是目錄
維運 網站架設好之後沒有人管理，這個網站不久會「死」。不是鬼月剛過完我想鬼故事。
通常死因很多，通常有以下幾點:
吃太飽，脹死: 網站日誌在一小段時間增長太多，把硬碟空間塞滿，導致系統逐漸癱瘓。 頭腦燒，忙死： 網站程式問題造成系統突發崩潰。 無法反應，慢死： 網站流入超出預期的使用人數，造成網站系統反應慢。 沒有能量，餓死： 某某電力公司發電廠跳脫，UPS電力耗盡，網站預警關機。 為了預防、解決上述狀況，維運的工作不可少。好的維運人員可以避免因上述發事件發生網站異常。所以，停電了！但是維運人員在滑手機、網站沒有出現狀況，是好事！該加薪！
資安 給我你的電話號碼，我不要。給我一所學校師生的電話號碼，即使一桶金交換我也願意。
試想，得到電話號碼可以做什麼？
「兒子呀～你現在在哪裡？快來救我～～～」、「先生您好，您符合30萬放款資格，手續費0元。」、「恭喜王○○，獲得iphone15 pro ，請附上郵資以便寄送」&amp;hellip;&amp;hellip;等資訊是否接收過？
如果覺得只是詐騙而已，但是一天四、五則訊息、電話，不會覺得被騷擾、煩躁？
資安這一塊領域最近在網站變得如此重要，以往網站開發全面以功能導向，如今必須把資安面向當作基本考慮因素。以前會覺得是有專責即可，今天得從需求訪談開始就得考慮。
所以，網站工程人員，辛苦了！該加薪！
專案管理: 實際上分工有好也有壞，但壞處可以透過「溝通」解決 不過後來我入職到現在，也不是一直都接觸這些。也許是環境因素讓我在後端領域可是碰了不少，如：SpringBoot衍生框架、資料庫、作業系統、虛擬化設備&#39; 容器伺服器、硬體設備、網路設備&amp;hellip;&amp;hellip;等，要說接觸的廣也好，說廣兒不精也好，我都接受這些看法。重點是能夠如何解決當前問題與規劃未來系統運作才是我目前的工作重點。
話說回來，越多人開發、開發時程越久、生命週期越久的網站，「溝通」越顯的重要。
這時後專案管理師的功能就出現啦！有人負責規劃一個網站的開發進度、支援生命週期要到什麼時候&amp;hellip;&amp;hellip;等，讓技術人員可以專心處理網站開發上的各種難題是一件好事。工程人員也可以不用講客戶聽不懂的程式語言給人聽啦～
專案管理的部份我完全外行，推這一系列的文章給大家: 轉職PM在IT業的生存之道
整體技術介紹完之後，我想簡單介紹程式撰寫習慣。因為這項關係到日後接手的工程師或是一年以後的自己。
再來是進入這系列的重點：如何開發網站。</description>
    </item>
    
    <item>
      <title>來架個網站吧-07.程式撰寫習慣</title>
      <link>http://pollochang.work/post/1000-07.%E7%A8%8B%E5%BC%8F%E6%92%B0%E5%AF%AB%E7%BF%92%E6%85%A3/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-07.%E7%A8%8B%E5%BC%8F%E6%92%B0%E5%AF%AB%E7%BF%92%E6%85%A3/</guid>
      <description>來架個網站吧-07.程式撰寫習慣 tags: 來架個網站吧 我是目錄
程式碼風格，是一件很抽象的事情。但是在團隊中風格一致，似乎很重要。
我鮮強調一次是，「似乎」。
讓我來說說吧 一個網站只有一個工程師開發。程式碼風格不一致(應該)沒有關係。例如，縮排、命名規則不一致、包含與更動業務邏輯前的程式片段，如下列範例:
public class Main { public static void main(String[] args) { int user_input = 0; //for(int i=1;i&amp;lt;=9;i++) { // for(int j=1;j&amp;lt;=i;j++) { // System.out.print(j+&amp;#34;×&amp;#34;+i+&amp;#34;=&amp;#34;+i*j+&amp;#34;\t&amp;#34;); // } // System.out.println(); // } int Not_too_good = 60; int OK = 80; int good = 100;String showMsg = &amp;#34;&amp;#34;; if(user_input &amp;lt; Not_too_good){ showMsg = &amp;#34;Not too good&amp;#34;; }else if(user_input &amp;lt; OK){ showMsg = &amp;#34;Not bad&amp;#34;;}else if(user_input &amp;lt; good){ showMsg = &amp;#34;OK&amp;#34;; }else{ showMsg = &amp;#34;Good&amp;#34;; } System.</description>
    </item>
    
    <item>
      <title>來架個網站吧-08.開發環境建置</title>
      <link>http://pollochang.work/post/1000-08.%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-08.%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE/</guid>
      <description>來架個網站吧-08.開發環境建置 tags: 來架個網站吧 我是目錄
所以我要如何開發網站？ 網站，最基本的功能是有目的的資訊交流平台。所以開發一個網站需要先探討，是為誰建立的？使用目的是什？接下來才是後續的系統流程設計與開發。
這邊我先設定架設網站的目標：給中學生查詢的網站字典。之後架設網站時，我會以我自己在學生時期的經驗為範本，逐步構出需求。
在架設網站的資金預算方面是零元。沒有說錯是零元！身為窮到只剩下技術的「工程屍」錢都拿去養家餬口了，再沒有金主的贊助下預算一切都是零元。
以下開放贊助
確認好需求目標之後，就是先想出要如何完成需求目標啦！以下是我的方案：
開發的技術框架是使用Grails，資料庫方面是使用Postgreql。 網站平台會採用硬體自架硬體平台，然後使用Proxmox作為虛擬機平台。網站的作業系統會以Debian為主。 上線之後是「維運」的開始。在網路的世界中，沒有一個網站是永遠沒有意外的。一定會有人發現系統問題，一定會出現網站失去服務功能。當出現意外時，要如何處置，還有要怎麼讓開發者(團隊)知到出現問題，是網站的生命週期中很重要的一環。而且「維運」這一階段，從第一次上線或是開發階段就已經開始，直到網停止服務的當下才會結束。另外，這部份也是佔最多「人力」、「金錢」、「物力」資源的部份。 開發環境建置 在學習程式語言時，必須先建立開發環境。不過等等！有些人想要踏入軟體工程這門領域前，想先看看自己是不是真的要往這方面發展。沒有關係，現在也有線上的環境，只要能打開電腦而且連上網路，就可以開始練習了。關於這一系列我找了下面幾個線上環境供參考：
JAVA: https://www.learnjavaonline.org/ SQL: https://www.learnsqlonline.org/ JavaScript: https://www.learn-js.org/ HTML: https://www.learn-html.org/ 如果一開始有遲疑，經過線上得初始之臺確定要踏進來，那就開始建立自己的開發環境吧！
先說建立開發環境時會遇到的狀況吧！
「每個人建立開發環境遇到錯誤時，不一定會是相同的狀況。」
或許，是每個人的電腦環境不一樣，或許是自己忘記設定某項參數等等，都有可能。但是別怕！有Google。一邊除錯一邊上網尋找解答一邊嘗試，是現在開發過程的必經之路。因為人腦記憶有限，即始今天可以解決河內塔問題，五年十年之後，當下也不一定能立刻解決。不過經過上網搜尋，或是詢問別人後，或許就可以找回之前的記憶，如何處理。
一個放置筆記的工具 這是非常重要的事情。筆記可以是紙本筆記本也可以是電子形式的，只要可以記下工作上遇上的困難、解決困難的工具都可以。
開發的過程中，記得養成記筆記得習慣。最好是習慣每天寫下自己坐下哪些事情。
有了這些紀錄，之後需要回想工作上某件事情時，速度會比較快。
而我自己做筆記的工具是vscode + git，一方面是可以接近免費達到跨裝置跨平台，一方面單純我習慣用筆記本做紀錄而已。
開發工具-intelliJ IDEA 先說好，我沒有為他打廣告。只是我覺得很好用而已。另外，學習完程式語言的基本功後，就是不斷學習各個框架的用法，這時IDEA就是很好的學習工具，因為他可以自動提示用法，甚至可以很輕鬆找到 source code 是怎寫，在職場學習上市很不錯的唷。
資料庫: postgresql 這邊我是舉一個資料庫為例，學習資料庫不必每種資料庫都摸的徹底，對於網站程式開發人員熟悉一種資料庫即可，畢竟現在很多程式框架已經作到程式與資料庫隔離。但是這邊也必須提醒一下，如果未來想持續在網站領域發展的，就必須清楚了解一種資料庫的行為，對日後系統效能調校上會很有幫助。
網站框架: Grails 想想10幾年前寫一個網站，在JAVA 生態是用 J2EE 規範中建立伺服器網站。每一項程式細節功能，如資料庫操作、網頁畫面呈現必須透過開發工程師一項一項開發。自從有了框架概念之後，網站的開發工程師就不必在開發每項系統功能注意資料庫連線有關閉、HTML 有寫錯等等，就可以很專心處理程式業務邏輯上的開發。
在這次的系統我以 Grails 為開發框架，沒有什麼原因，只是我比校熟悉而已。
在這邊我也不教Grails 如何使用，畢竟獲取學習資源且自我閱讀學習是一個資訊專業人事必備的技能，天下技術如此多，要學習靠自己吧！下列是學習資源:
grails 官方網站 邊看邊學Groovy/Grails/Gradle 系列 intellij Grails plugin Getting Started With Grails 以上就是開發環境會用的的工具啦！</description>
    </item>
    
    <item>
      <title>來架個網站吧-09.系統流程規劃</title>
      <link>http://pollochang.work/post/1000-09.%E7%B3%BB%E7%B5%B1%E6%B5%81%E7%A8%8B%E8%A6%8F%E5%8A%83/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-09.%E7%B3%BB%E7%B5%B1%E6%B5%81%E7%A8%8B%E8%A6%8F%E5%8A%83/</guid>
      <description>來架個網站吧-09.系統流程規劃 tags: 來架個網站吧 我是目錄
昨天大致上說明了開發環境準備的工作，於是可以開始著手開始開發了。在大學時期的我通常一直是這認為的。
在網站開發之前，得先有系統設計。就讓我繼續拿線上字典的例子繼續吧！
確認需求項目 在規劃系統流程之前，首要事項是確認需求項目。下列是我歸納的需求項目：
系統使用者: 初淺識字的人 使用者需求: 透過文字搜尋詞彙語意 預期使用人數(處理效能要求): 每分鐘10次查詢 系統資料來源: 國語小字典 資訊流程： (大學生)在網頁中輸入要搜尋的文字 (系統)在資料庫中搜尋文字的資料 (系統)將文字資訊呈現在網頁中 (大學生)在網頁中知道文字的資訊 規劃系統流程 在學生時期有以下列資訊圖表示：
User Case 系統流程圖 領域模型圖(DFD資料流程圖) 但是在職場上實際上往往只有「系統流程圖」，原因很簡單，與需求確認的對象往往看不懂。因為我認為圖示用來溝通的，如果對方有很大一部份都看不懂，必須得花費一小時甚至更久先聽完解說，聽完之後或許不會立刻了解。有了一兩次實物經驗後，在跟客戶對談前，系統流程圖夠表達雙方認定的作業流程即可。
以下就是這次的系統流程規劃：
系統雛型 網站功能如果有提供使用者介面，做好先做雛型畫面，而且雛型畫面必須與不同觀點的人參預討論，通常會邀請下列人參預：系統開發人員、前端技術人員、需求訪談者、系統使用者。
通常會優先跟需求訪談者、系統使用者初次確認系統畫面，在此次確認的項目如下：
系統功能 操作流程順暢 系統雛型如下
確認沒有問題之後，才會跟系統開發人員、前端技術人員說明系統雛型。如果這階段有人說技術難很高時就會採減法策略，優先不處理與業務不相關的項目，以我自己來說就是畫面要很漂亮、很美麗(我只繪畫火柴人程度而已)。如果技術難以克服的項目與系統主要業務項目重疊時，會採用小步快跑策略。把技術難以達成的業務項目再切割，例如系統要承受每分鐘10次查詢這項需求可以做完查詢功能再探討如何達成目標。
以上就是系統流程規劃部份，接下來就要進入資料規劃。</description>
    </item>
    
    <item>
      <title>來架個網站吧-10.資料規劃</title>
      <link>http://pollochang.work/post/1000-10.%E8%B3%87%E6%96%99%E8%A6%8F%E5%8A%83/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-10.%E8%B3%87%E6%96%99%E8%A6%8F%E5%8A%83/</guid>
      <description>來架個網站吧-10.資料規劃 tags: 來架個網站吧 我是目錄
完成需求訪談與系統流程規劃後，接下來就是資料規劃。
恩～距離打程式碼真的還有一段路 XDDD
在規劃資料表前需要考慮一些因素
系統資料來源 系統功能 使用的技術框架 未來資料成長量 上述因素是我在規劃資料表時必須考慮的因素。
系統資料來源 這次的需求資料來源是國語小字典，下圖是資料的部份擷圖。
乍看之下，有一點亂
觀察資料之後，可以設計下列資料表欄位:
[項目]: [規劃欄位英文名稱] / [欄位資料型態]/ [長度] 單字: word / 文字 / 1 部首: radical / 文字 / 1 總筆畫數: total_strokes / 數值 / N/A 部首外筆畫: out_strokes / 數值 / N/A 注音: mpc / 文字 / 4 解釋: explanation / 很多文字 / N/A 系統功能 看完資料之後，接下來要將系統功能加入考慮因素。此次的功能有搜尋單字、系統要承受每分鐘10次查詢，所以欄位單字會開定長。
[項目]: [規劃欄位英文名稱] / [欄位資料型態]/ [長度] 單字: word / 定長文字 / 1 部首: radical / 文字 / 1 總筆畫數: total_strokes / 數值 / N/A 部首外筆畫: out_strokes / 數值 / N/A 注音: mpc / 文字 / 4 解釋: explanation / 很多文字 / N/A 使用的技術框架 技術框架也會影響資料規劃，本次是使用下列技術:</description>
    </item>
    
    <item>
      <title>來架個網站吧-11.網站開發-1: 建立專案</title>
      <link>http://pollochang.work/post/1000-11.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-1-%E5%BB%BA%E7%AB%8B%E5%B0%88%E6%A1%88/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-11.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-1-%E5%BB%BA%E7%AB%8B%E5%B0%88%E6%A1%88/</guid>
      <description>來架個網站吧-11.網站開發-1: 建立專案 tags: 來架個網站吧 我是目錄
建立 git 儲存庫 不管是新增一個實驗性的網站功能，或是範例的程式，能導入git是一個不做的選擇。所以在這邊我先在gitHub開一個儲存庫:ironman-dict
新增完成之後就是直接把git專案下載到本機中:
grails 開發環境部署 JDK Grails 本身是 JVM Base 的框架，因此記得下載 JDK，本次採用 JDK17。
grails 建立專案之前，首先去官方網站下載 Grails SDK，本次採用 Grails5.3.3。
官方網站下載頁面: https://grails.org/download.html
下載完成之後見得解壓縮。
intellij 我自己是習慣使用 IntelliJ IDEA Ultimate進行開發，在Grails 3.0.17 版本以前還有 Eclipse、NetBeans這兩個IDE可以選擇，之後久只剩下 IntelliJ IDEA Ultimate。當然 vim、NotePad++等文字編輯器依然可以進行開發。
另外，在 IntelliJ IDEA Ultimate 2022 之後需要自行下載 Grails Plugin才能正常部署。
建立專案 新增完git專案之後，接下來是新增一個Grials專案，步驟如下：
打開 intellij 選擇新New Project 新增grails類型專案 輸入專案目錄位置，點擊Finish 等一會兒時間專案就自動建立完成 啟動前建議先修改一下啟動參數，避免多個專案同時啟動出現port衝導致專案無法啟動的狀況 設定 File encodings 為 UTF8 這部份主要是解決grails-apps/i18n 裡的多國語言設定呈現亂碼的狀況。
點擊右上角的啟動按鈕就可以檢查專案可以正常啟動 </description>
    </item>
    
    <item>
      <title>來架個網站吧-12.網站開發-2: 設定環境參數-</title>
      <link>http://pollochang.work/post/1000-12.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-2-%E8%A8%AD%E5%AE%9A%E7%92%B0%E5%A2%83%E5%8F%83%E6%95%B8-1/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-12.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-2-%E8%A8%AD%E5%AE%9A%E7%92%B0%E5%A2%83%E5%8F%83%E6%95%B8-1/</guid>
      <description>來架個網站吧-12.網站開發-2: 設定環境參數-1 tags: 來架個網站吧 Grails 我是目錄
昨天可以開啟專案之後，新增最主要的工作內容就是把專案連上資料庫
安裝開發資料庫 安裝 資料庫版本: postgresql 15 因為 postgresql 官方網站已經有詳細的安裝步驟，在這邊就不贅述。
postgresql 下載網址: https://www.postgresql.org/download/
開資料庫 安裝完成資料庫之後，就可以建立資料庫，指令如下:
進入資料庫 sudo -u postgres psql 執行sql -- 新增資料庫 CREATE DATABASE ironman_dict_db; -- 新增資料庫角色 CREATE ROLE dict_dba NOINHERIT; -- 授予 dict_dba 角色可連線至 ironman_dict_db 資料庫 GRANT CONNECT ON DATABASE ironman_dict_db TO dict_dba; -- 授予 dict_dba 在 DATABASE 所有權限 GRANT ALL ON DATABASE ironman_dict_db to dict_dba; -- 新增 dict_ap 使用者 CREATE USER dict_ap WITH PASSWORD &amp;#39;LF2.</description>
    </item>
    
    <item>
      <title>來架個網站吧-13.網站開發-3: 設定環境參數-2</title>
      <link>http://pollochang.work/post/1000-13.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-3-%E8%A8%AD%E5%AE%9A%E7%92%B0%E5%A2%83%E5%8F%83%E6%95%B8-2/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-13.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-3-%E8%A8%AD%E5%AE%9A%E7%92%B0%E5%A2%83%E5%8F%83%E6%95%B8-2/</guid>
      <description>來架個網站吧-13.網站開發-3: 設定環境參數-2 tags: 來架個網站吧 Grails 我是目錄
昨天本來想要一口氣講完，但是發現篇幅好像有點長，所以決定切兩部份。
設定專案環境參數 grails-app/conf/application.yml --- grails: profile: web codegen: defaultPackage: ironman.dict gorm: reactor: # Whether to translate GORM events into Reactor events # Disabled by default for performance reasons events: false info: app: name: &amp;#39;@info.app.name@&amp;#39; version: &amp;#39;@info.app.version@&amp;#39; grailsVersion: &amp;#39;@info.app.grailsVersion@&amp;#39; spring: jmx: unique-names: true main: banner-mode: &amp;#34;off&amp;#34; groovy: template: check-template-location: false devtools: restart: additional-exclude: - &amp;#39;*.gsp&amp;#39; - &amp;#39;**/*.gsp&amp;#39; - &amp;#39;*.gson&amp;#39; - &amp;#39;**/*.gson&amp;#39; - &amp;#39;logback.groovy&amp;#39; - &amp;#39;*.properties&amp;#39; environments: development: management: endpoints: enabled-by-default: true web: base-path: &amp;#39;/actuator&amp;#39; exposure: include: &amp;#39;*&amp;#39; production: management: endpoints: enabled-by-default: false --- grails: mime: disable: accept: header: userAgents: - Gecko - WebKit - Presto - Trident types: all: &amp;#39;*/*&amp;#39; atom: application/atom+xml css: text/css csv: text/csv form: application/x-www-form-urlencoded html: - text/html - application/xhtml+xml js: text/javascript json: - application/json - text/json multipartForm: multipart/form-data pdf: application/pdf rss: application/rss+xml text: text/plain hal: - application/hal+json - application/hal+xml xml: - text/xml - application/xml urlmapping: cache: maxsize: 1000 controllers: defaultScope: singleton converters: encoding: UTF-8 views: default: codec: html gsp: encoding: UTF-8 htmlcodec: xml codecs: expression: html scriptlet: html taglib: none staticparts: none --- hibernate: cache: queries: false use_second_level_cache: false use_query_cache: false dataSource: pooled: true jmxExport: true driverClassName: org.</description>
    </item>
    
    <item>
      <title>來架個網站吧-14.網站開發-4-MVC-1-view</title>
      <link>http://pollochang.work/post/1000-14.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-4-mvc-1-view/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-14.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-4-mvc-1-view/</guid>
      <description>來架個網站吧-14.網站開發-4-MVC-1-view tags: 來架個網站吧 Grails 我是目錄
想了又想，決定還是從畫面開始講起，雖然跟我自己的開發習慣不一樣。因為在我自己學習網站開發的階段是從畫面開始學習，也許這樣對初學者會比較容易上手。後來工作三、四年之後，逐漸會先把系統的資料處理流程先構築完畢，接下來在處理使用者或是API介面部份，最後在修整程式細節。
今天主要是把網站畫面構築出來，這邊我主要使用的技術如下:
bootstrap v4 bootstrap-table jQuery 新增 Controller 在新增畫面之前，首先新增一個Controller。一個Controller代表ContextPath後的第一個Path。而第二個Path代表Controller裡的Action。
接下來就用IDEA完成新增DictController.groovy
grails-app/controllers/dict/DictController.groovy 在Controllers資料夾中按下右鍵 選擇新增Grails Controller 輸入要新增的Controller，這次是: DictController 新增成功後就會在Controllers下中建立一個DictController.groovy檔案。 新增 laylout: 在新增一個view之前，建議先完成一個layout(母板)，以下是這次是要要新增 layout 所需要的檔案。
stylesheet: grails-app/assets/stylesheets/dict-main.css javascript: grails-app/assets/javascripts/dict-main.js laylout: grails-app/views/layouts/dict-main.gsp 目錄結構如下
grails-app ├── assets │ ├── javascripts │ │ ├── bootstrap.js │ │ ├── bootstrap.js.map │ │ ├── bootstrap.min.js │ │ ├── bootstrap.min.js.map │ │ ├── dict-main.js │ │ ├── jquery-3.5.1.js │ │ ├── jquery-3.5.1.min.js │ │ ├── jquery-3.</description>
    </item>
    
    <item>
      <title>來架個網站吧-15.網站開發-5-MVC-2-Domain</title>
      <link>http://pollochang.work/post/1000-15.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-5-mvc-2-domain/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-15.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-5-mvc-2-domain/</guid>
      <description>來架個網站吧-15.網站開發-5-MVC-2-Domain tags: 來架個網站吧 Grails 我是目錄
昨天完成新增畫面之後，接下來就是建立 domain 啦！在Grails設計框架之中，原則上資料酷的一張table是對到一個 Domain Class，本次要新增的table 在篇中: 來架個網站吧-10.資料規劃，就有提到，於是我在這邊就不多做闡述。新增完成 Table 之後，接下來是新增幾筆測試資料。如下:
INSERT INTO public.dict ( word, radical, total_strokes, out_strokes, mpc, explanation) VALUES(&amp;#39;一&amp;#39;, &amp;#39;一&amp;#39;, 1, 0, &amp;#39;一&amp;#39;, &amp;#39;(1) 自ㄗˋ然ㄖㄢˊ數ㄕㄨˋ的˙ㄉㄜ第ㄉㄧˋ一ㄧ位ㄨㄟˋ。大ㄉㄚˋ寫ㄒㄧㄝˇ作ㄗㄨㄛˋ「壹ㄧ」，阿ㄚ拉ㄌㄚ伯ㄅㄛˊ數ㄕㄨˋ字ㄗˋ作ㄗㄨㄛˋ「１」。 (2)單ㄉㄢ個˙ㄍㄜ、不ㄅㄨˊ是ㄕˋ多ㄉㄨㄛ數ㄕㄨˋ的˙ㄉㄜ。如ㄖㄨˊ：「一ㄧˊ個˙ㄍㄜ」、「一ㄧˋ張ㄓㄤ紙ㄓˇ」。 (3) 相ㄒㄧㄤ同ㄊㄨㄥˊ、一ㄧˊ致ㄓˋ。如ㄖㄨˊ：「一ㄧˋ模ㄇㄛˊ一ㄧˊ樣ㄧㄤˋ」、「大ㄉㄚˋ小ㄒㄧㄠˇ不ㄅㄨˋ一ㄧ」。 (4) 專ㄓㄨㄢ注ㄓㄨˋ、純ㄔㄨㄣˊ正ㄓㄥˋ。如ㄖㄨˊ：「一ㄧˋ心ㄒㄧㄣ一ㄧˊ意ㄧˋ」、「用ㄩㄥˋ情ㄑㄧㄥˊ專ㄓㄨㄢ一ㄧ」。 (5)全ㄑㄩㄢˊ、整ㄓㄥˇ。如ㄖㄨˊ：「一ㄧˋ身ㄕㄣ臭ㄔㄡˋ汗ㄏㄢˋ」、「一ㄧˋ生ㄕㄥ一ㄧˊ世ㄕˋ」。 (6) 每ㄇㄟˇ。如ㄖㄨˊ：「一ㄧˋ班ㄅㄢ四ㄙˋ十ㄕˊ人ㄖㄣˊ」、「一ㄧˊ頁ㄧㄝˋ六ㄌㄧㄡˋ百ㄅㄞˇ字ㄗˋ」。 (7) 才ㄘㄞˊ、剛ㄍㄤ剛ㄍㄤ。如ㄖㄨˊ：「一ㄧˋ聽ㄊㄧㄥ就ㄐㄧㄡˋ懂ㄉㄨㄥˇ」、「天ㄊㄧㄢ一ㄧˊ亮ㄌㄧㄤˋ，他ㄊㄚ便ㄅㄧㄢˋ起ㄑㄧˇ床ㄔㄨㄤˊ。」 (8)放ㄈㄤˋ在ㄗㄞˋ兩ㄌㄧㄤˇ重ㄔㄨㄥˊ疊ㄉㄧㄝˊ的˙ㄉㄜ動ㄉㄨㄥˋ詞ㄘˊ之ㄓ間ㄐㄧㄢ，表ㄅㄧㄠˇ示ㄕˋ短ㄉㄨㄢˇ暫ㄓㄢˋ或ㄏㄨㄛˋ略ㄌㄩㄝˋ微ㄨㄟˊ嘗ㄔㄤˊ試ㄕˋ的˙ㄉㄜ意ㄧˋ思˙ㄙ。如ㄖㄨˊ：「動ㄉㄨㄥˋ一ㄧ動ㄉㄨㄥˋ」、「問ㄨㄣˋ一ㄧ問ㄨㄣˋ」、「聞ㄨㄣˊ一ㄧ聞ㄨㄣˊ」。 (9) 另ㄌㄧㄥˋ外ㄨㄞˋ的˙ㄉㄜ。如ㄖㄨˊ：「蟬ㄔㄢˊ，一ㄧˋ名ㄇㄧㄥˊ知ㄓ了ㄌㄧㄠˇ。」 (10)一ㄧˊ旦ㄉㄢˋ。表ㄅㄧㄠˇ示ㄕˋ假ㄐㄧㄚˇ設ㄕㄜˋ的˙ㄉㄜ語ㄩˇ氣ㄑㄧˋ。如ㄖㄨˊ：「一ㄧˋ失ㄕ足ㄗㄨˊ成ㄔㄥˊ千ㄑㄧㄢ古ㄍㄨˇ恨ㄏㄣˋ」。&amp;#39; ); INSERT INTO public.dict ( word, radical, total_strokes, out_strokes, mpc, explanation) VALUES(&amp;#39;團&amp;#39;, &amp;#39;囗&amp;#39;, 14, 11, &amp;#39;ㄊㄨㄢˊ&amp;#39;, &amp;#39;(1)圓ㄩㄢˊ形ㄒㄧㄥˊ的˙ㄉㄜ。如ㄖㄨˊ：「團ㄊㄨㄢˊ扇ㄕㄢˋ」。 (2)集ㄐㄧˊ結ㄐㄧㄝˊ成ㄔㄥˊ球ㄑㄧㄡˊ狀ㄓㄨㄤˋ的˙ㄉㄜ事ㄕˋ物ㄨˋ。如ㄖㄨˊ：「麵ㄇㄧㄢˋ團ㄊㄨㄢˊ」、「紙ㄓˇ團ㄊㄨㄢˊ」、「肉ㄖㄡˋ團ㄊㄨㄢˊ」。 (3)聚ㄐㄩˋ集ㄐㄧˊ、凝ㄋㄧㄥˊ結ㄐㄧㄝˊ。如ㄖㄨˊ：「團ㄊㄨㄢˊ拜ㄅㄞˋ」、「團ㄊㄨㄢˊ購ㄍㄡˋ」、「團ㄊㄨㄢˊ結ㄐㄧㄝˊ」、「團ㄊㄨㄢˊ聚ㄐㄩˋ」、「團ㄊㄨㄢˊ圓ㄩㄢˊ」、「團ㄊㄨㄢˊ團ㄊㄨㄢˊ露ㄌㄨˋ珠ㄓㄨ」。 (4)同ㄊㄨㄥˊ類ㄌㄟˋ性ㄒㄧㄥˋ質ㄓˊ的˙ㄉㄜ物ㄨˋ體ㄊㄧˇ大ㄉㄚˋ量ㄌㄧㄤˋ結ㄐㄧㄝˊ集ㄐㄧˊ的˙ㄉㄜ聚ㄐㄩˋ合ㄏㄜˊ物ㄨˋ。如ㄖㄨˊ：「星ㄒㄧㄥ團ㄊㄨㄢˊ」、「疑ㄧˊ團ㄊㄨㄢˊ」、「冷ㄌㄥˇ氣ㄑㄧˋ團ㄊㄨㄢˊ」。 (5)因ㄧㄣ特ㄊㄜˋ定ㄉㄧㄥˋ性ㄒㄧㄥˋ質ㄓˊ或ㄏㄨㄛˋ共ㄍㄨㄥˋ同ㄊㄨㄥˊ目ㄇㄨˋ的ㄉㄧˋ而ㄦˊ組ㄗㄨˇ織ㄓ聚ㄐㄩˋ集ㄐㄧˊ的˙ㄉㄜ群ㄑㄩㄣˊ體ㄊㄧˇ。如ㄖㄨˊ：「團ㄊㄨㄢˊ體ㄊㄧˇ」、「社ㄕㄜˋ團ㄊㄨㄢˊ」、「馬ㄇㄚˇ戲ㄒㄧˋ團ㄊㄨㄢˊ」、「旅ㄌㄩˇ行ㄒㄧㄥˊ團ㄊㄨㄢˊ」、「合ㄏㄜˊ唱ㄔㄤˋ團ㄊㄨㄢˊ」。 (6)形ㄒㄧㄥˊ容ㄖㄨㄥˊ轉ㄓㄨㄢˇ圈ㄑㄩㄢ的˙ㄉㄜ樣ㄧㄤˋ子ㄗˇ。如ㄖㄨˊ：「團ㄊㄨㄢˊ團ㄊㄨㄢˊ轉ㄓㄨㄢˋ」、「團ㄊㄨㄢˊ團ㄊㄨㄢˊ打ㄉㄚˇ轉ㄓㄨㄢˋ」。 (7)軍ㄐㄩㄣ隊ㄉㄨㄟˋ的˙ㄉㄜ編ㄅㄧㄢ制ㄓˋ之ㄓ一ㄧ。如ㄖㄨˊ：「軍ㄐㄩㄣ團ㄊㄨㄢˊ」。 (8)量ㄌㄧㄤˋ詞ㄘˊ。A&amp;gt;用ㄩㄥˋ於ㄩˊ計ㄐㄧˋ算ㄙㄨㄢˋ團ㄊㄨㄢˊ狀ㄓㄨㄤˋ物ㄨˋ的˙ㄉㄜ單ㄉㄢ位ㄨㄟˋ。如ㄖㄨˊ：「一ㄧˋ團ㄊㄨㄢˊ毛ㄇㄠˊ線ㄒㄧㄢˋ」、「兩ㄌㄧㄤˇ團ㄊㄨㄢˊ泥ㄋㄧˊ巴ㄅㄚ」。B&amp;gt;用ㄩㄥˋ於ㄩˊ計ㄐㄧˋ算ㄙㄨㄢˋ成ㄔㄥˊ團ㄊㄨㄢˊ狀ㄓㄨㄤˋ態ㄊㄞˋ的˙ㄉㄜ單ㄉㄢ位ㄨㄟˋ。「一ㄧˋ團ㄊㄨㄢˊ亂ㄌㄨㄢˋ」、「一ㄧˋ團ㄊㄨㄢˊ和ㄏㄜˊ氣ㄑㄧˋ」、「擠ㄐㄧˇ成ㄔㄥˊ一ㄧˋ團ㄊㄨㄢˊ」。&amp;#39; ); INSERT INTO public.</description>
    </item>
    
    <item>
      <title>來架個網站吧-16.網站開發-6-MVC-3-Service</title>
      <link>http://pollochang.work/post/1000-16.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-6-mvc-3-service/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-16.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-6-mvc-3-service/</guid>
      <description>來架個網站吧-16.網站開發-6-MVC-3-Service tags: 來架個網站吧 Grails 我是目錄
新增 Service 在Service/dict資料夾中按下右鍵。 選擇新增Grails Domain Class。 程式說明 在 Service 的文件中主要是處理資料流程，一般API並不會直接觸及Service。在這邊我比較請向處理單一 Domain Class 的資料處理，也就是說有一張 Domain 就會對一個 Service。
Service 通常會有事物流程 @Transactional，在執行 新增、修改、刪除 時還蠻常用到。
而在程式中 GrailsParameterMap ，是前端表單傳入的數值，繼承自 java.util.Map，回傳的資料如下:
[searchWord:一, controller:dict, action:filter] 查詢的方式，這邊我是用 createCriteria 來操作查詢。完成執行查詢之後，將資料轉成 bootstrap table 所需要的資料格式，如下：
{ &amp;#34;total&amp;#34;: 1, &amp;#34;rows&amp;#34;: [ { &amp;#34;id&amp;#34;: 1, &amp;#34;word&amp;#34;: &amp;#34;一&amp;#34;, &amp;#34;radical&amp;#34;: &amp;#34;一&amp;#34;, &amp;#34;totalStrokes&amp;#34;: 1, &amp;#34;outStrokes&amp;#34;: 0, &amp;#34;mpc&amp;#34;: &amp;#34;一&amp;#34;, &amp;#34;explanation&amp;#34;: &amp;#34;....&amp;#34; } ] } grails-app/services/dict/DictService.groovy package dict import grails.gorm.transactions.Transactional import grails.web.servlet.mvc.GrailsParameterMap @Transactional //事物 class DictService { LinkedHashMap filter(GrailsParameterMap params) { LinkedHashMap result = [:] String word = params?</description>
    </item>
    
    <item>
      <title>來架個網站吧-17.網站開發-7-MVC-4-Controller</title>
      <link>http://pollochang.work/post/1000-17.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-7-mvc-4-controller/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-17.%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-7-mvc-4-controller/</guid>
      <description>來架個網站吧-17.網站開發-7-MVC-4-Controller tags: 來架個網站吧 Grails 我是目錄
今天讓我們回到第14天一開始建立的 Controller 。
Grails Controller 是一般API會直接觸及的程式，在這邊主要是處理業務流程。Controller 中有兩項比較常被用到: render、redirect。
render render 是表明要回傳的資料。資料可以是TEXT、JSON、view、templates等形式。在程式中的寫會是如下:
class ExampleController { def dictService def index(){ render(view: &amp;#34;example&amp;#34;) } /** * 查詢 * @return */ JSON filter(){ LinkedHashMap result = dictService.filter(params) render result as JSON } } redirect redirect 顧名思義是跳轉的概念。會在 Web Server 中使用 HTTP 通訊協定重新導向到新增目的地。在程式中的寫會是如下:
class ExampleController { def index(){ redirect controller: &amp;#39;dict&amp;#39;, action: &amp;#39;index&amp;#39; ,id: &amp;#39;test&amp;#39; } def goToGoogle(){ redirect(url: &amp;#34;http://www.google.com&amp;#34;) } } 在這邊有草過一個坑: 在 redirect 中參數 id 傳遞中文需要進行 URL encode，不然出現下列類似錯誤</description>
    </item>
    
    <item>
      <title>來架個網站吧-18-網站開發-8-最後的最後</title>
      <link>http://pollochang.work/post/1000-18-%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-8-%E6%9C%80%E5%BE%8C%E7%9A%84%E6%9C%80%E5%BE%8C/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-18-%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC-8-%E6%9C%80%E5%BE%8C%E7%9A%84%E6%9C%80%E5%BE%8C/</guid>
      <description>來架個網站吧-18-網站開發-8-最後的最後 tags: 來架個網站吧 Grails 我是目錄
前一個星期大致上把Grails 的框架很概略的帶過一遍，這邊我先在 gsp 頁面把 dictController.filter 寫進入。最後成果如下：
&amp;lt;%@ page contentType=&amp;#34;text/html;charset=UTF-8&amp;#34; %&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta name=&amp;#34;layout&amp;#34; content=&amp;#34;dict-main&amp;#34;/&amp;gt; &amp;lt;link href=&amp;#34;https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.css&amp;#34; rel=&amp;#34;stylesheet&amp;#34;&amp;gt; &amp;lt;script src=&amp;#34;https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;row&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;col&amp;#34;&amp;gt; &amp;lt;g:form name=&amp;#34;searchForm&amp;#34; &amp;gt; &amp;lt;div class=&amp;#34;form-group input-group&amp;#34;&amp;gt; &amp;lt;h3&amp;gt;&amp;lt;label for=&amp;#34;searchWord&amp;#34;&amp;gt;請輸入查詢的詞彙&amp;lt;/label&amp;gt;&amp;lt;/h3&amp;gt; &amp;lt;div class=&amp;#34;input-group mb-3&amp;#34;&amp;gt; &amp;lt;g:textField id=&amp;#34;searchWord&amp;#34; name=&amp;#34;searchWord&amp;#34; class=&amp;#34;form-control&amp;#34; aria-describedby=&amp;#34;searchWordHelp&amp;#34; /&amp;gt; &amp;lt;div class=&amp;#34;input-group-append&amp;#34;&amp;gt; &amp;lt;g:submitButton id=&amp;#34;searchButton&amp;#34; name=&amp;#34;searchButton&amp;#34; value=&amp;#34;查詢&amp;#34; class=&amp;#34;btn btn-outline-primary&amp;#34; type=&amp;#34;button&amp;#34; onclick=&amp;#34;refreshTable()&amp;#34; /&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;small id=&amp;#34;searchWordHelp&amp;#34; class=&amp;#34;form-text text-muted&amp;#34;&amp;gt;嘗試輸入: 天&amp;lt;/small&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/g:form&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;row&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;col&amp;#34;&amp;gt; &amp;lt;h3&amp;gt;查詢結果&amp;lt;/h3&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;row&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;col&amp;#34;&amp;gt; &amp;lt;table id=&amp;#34;resultTable&amp;#34; data-toggle=&amp;#34;table&amp;#34;&amp;gt; &amp;lt;thead&amp;gt; &amp;lt;tr class=&amp;#34;tr-class&amp;#34;&amp;gt; &amp;lt;th data-field=&amp;#34;word&amp;#34; data-formatter=&amp;#34;wordFormatter&amp;#34; data-valign=&amp;#34;middle&amp;#34;&amp;gt;單字(注音)&amp;lt;/th&amp;gt; &amp;lt;th data-field=&amp;#34;radical&amp;#34; data-valign=&amp;#34;middle&amp;#34;&amp;gt;部首&amp;lt;/th&amp;gt; &amp;lt;th data-field=&amp;#34;totalStrokes&amp;#34; data-formatter=&amp;#34;totalStrokesFormatter&amp;#34; data-valign=&amp;#34;middle&amp;#34;&amp;gt;總筆畫數/部首外筆畫&amp;lt;/th&amp;gt; &amp;lt;th data-field=&amp;#34;explanation&amp;#34; data-valign=&amp;#34;middle&amp;#34;&amp;gt;解釋&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/thead&amp;gt; &amp;lt;/tbody&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; function refreshTable() { jQuery(&amp;#39;#resultTable&amp;#39;).</description>
    </item>
    
    <item>
      <title>來架個網站吧-19.網站環境建置-硬體設備準備</title>
      <link>http://pollochang.work/post/1000-19.%E7%B6%B2%E7%AB%99%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE-%E7%A1%AC%E9%AB%94%E8%A8%AD%E5%82%99%E6%BA%96%E5%82%99/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-19.%E7%B6%B2%E7%AB%99%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE-%E7%A1%AC%E9%AB%94%E8%A8%AD%E5%82%99%E6%BA%96%E5%82%99/</guid>
      <description>來架個網站吧-19.網站環境建置-硬體設備準備 tags: 來架個網站吧 我是目錄
依現在的 x86 硬體設備大多都可以架設網站了，與機臺式的機器相比只差別穩定與維護容易的差別。
先講講我認為的差別在於「降低硬體損壞造成系統異常風險」。
以機架式伺服器: DELL R720 來說，硬碟通常是做Raid5降硬碟損壞造成資料遺失風險，在電源供應器也有兩顆互為備援，降低電源故障影響系統的風險。一般零售的個人電腦大多不會有複數零件以上的設計。但是對於實驗性質的網站來說不會是一個問題，因為系統癱瘓是可以被忍受的。
以這次實驗性質的網站中，因為預算十分有限，只能從二手網收購汰換下來的電腦架設。總計約2000元，以下是我的規格。
CPU: i5-7400 CPU RAM: DDR4 16GB Disk: 2T 硬體設備主要是用Proxmox架設虛擬機平台，在計算硬體可用效能空間來說，記憶體會預先被虛擬機平台佔用調2GB，硬碟空間大約會被佔用約80GB(還要預留存放ISO image)，因此以下是實際可供虛擬機使用的效能空間：
CPU: i5-7400 CPU RAM: DDR4 14GB Disk: 1.9T 在過往的經驗有拿過ACRE Veriton L480 (RAM: 4GB)做為虛擬機平台，但是部署完一個VM就差不多用完記憶體，因此在這邊建議要建立虛擬機平台記憶體需要16GB以上有足夠的記憶體分配給虛擬機。</description>
    </item>
    
    <item>
      <title>來架個網站吧-20.網站環境建置-架設虛擬機平台</title>
      <link>http://pollochang.work/post/1000-20.%E7%B6%B2%E7%AB%99%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE-%E6%9E%B6%E8%A8%AD%E8%99%9B%E6%93%AC%E6%A9%9F%E5%B9%B3%E5%8F%B0/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-20.%E7%B6%B2%E7%AB%99%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE-%E6%9E%B6%E8%A8%AD%E8%99%9B%E6%93%AC%E6%A9%9F%E5%B9%B3%E5%8F%B0/</guid>
      <description>來架個網站吧-20.網站環境建置-架設虛擬機平台 tags: 來架個網站吧 我是目錄
虛擬機平台 虛擬機平台很多種，在自己在玩的環境可以準備自己熟悉會是想玩的就可以。通常常見的平台有下列幾項：
VMWare Oracle VM Oracle VM VirtualBox KVM proxmox VMWare 大家或許都有碰過，畢竟介面簡單容易上手，我覺得是他的特色。但是免費版本的 VMware Workstation Player中，我記得只要關閉虛擬機視窗後，虛擬機就會進入暫停狀態，我認為比較不合適作為這次題目的虛擬機平台。如果有錢買VMware Workstation Player Pro 或是 vsphere 真的很適合，這是目前我用過中最容易上手的虛擬機平台。
功能可以參考這系列: IT系統建置 系列
Oracle VM 這個比較冷門一點，但是重點是Free(自由的)。
雖然是 Oracle 惡霸 推出的，功能上與 vsphere 相差不多，只是文件比較少，加上Oracle 未來也不在提供支援了，在這邊簡單提到一下。
Oracle VM VirtualBox 這個我比較推薦給大家當作玩具玩，畢竟大部分的人通常家裡的電腦不會專門做虛擬機平台，VirtualBox可以在家裡的電腦中滿足對虛擬機的好奇。
KVM 等等，先說好我不是講KVM切換器。
如果你跟我一樣是習慣用Linux 當作日常使用的作業系統，KVM Qemu Libvirt 會是一個很合適的選項，技術資源相當豐富(但是絕大多是英文)。而且可以玩一些黑技術，如：X群暉、X Apple、X esxi&amp;hellip;&amp;hellip;模擬一些昂貴平台等，原則上只要是 類unix系統 為底的平台都可以模擬。我主要是拿來研究功能導入，節省新設備導入的時間成本。
proxmox proxmox 作為開源的虛擬平台，很適合拿來做網站建置。操作容易上手，在中文文件也豐富，只要會安裝windows就會安裝 proxmox(安裝步驟只要一直按下一步就好)。</description>
    </item>
    
    <item>
      <title>來架個網站吧-21.網站環境建置-建立虛擬機範本</title>
      <link>http://pollochang.work/post/1000-21.%E7%B6%B2%E7%AB%99%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE-%E5%BB%BA%E7%AB%8B%E8%99%9B%E6%93%AC%E6%A9%9F%E7%AF%84%E6%9C%AC/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-21.%E7%B6%B2%E7%AB%99%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE-%E5%BB%BA%E7%AB%8B%E8%99%9B%E6%93%AC%E6%A9%9F%E7%AF%84%E6%9C%AC/</guid>
      <description>來架個網站吧-21.網站環境建置-建立虛擬機範本 tags: 來架個網站吧 我是目錄
建立網站環境前，建議可以預先建立網站環境範本，未來在部署資料庫、應用程式伺服器等服務可以事半功倍。接下來就是我自己常用的設定。
事前規劃 我的範本規劃如下
OS: Debian 12 CPU: 4Core Ram: 4GB Disk: 50GB /tmp /var: 依據TWGCB-01-008-0008 /var/tmp: 依據TWGCB-01-008-0009 /var/log: 依據TWGCB-01-008-0013 /var/log/audit: 依據TWGCB-01-008-0014 /home: 依據TWGCB-01-008-0015 common software: qemu-guest-agent vim firewalld wget curl autofs rsync tmux aide auditd 新增虛擬機 點擊「『Create VM」 輸入虛擬機名稱 選擇ISO image 勾選Qemu Agent 輸入預設要配置的磁碟大小 輸入要配置的CPU數量 輸入要配置的記憶體大小 確認網卡 確認虛擬機訊息 安裝作業系統 作業系統發行版本: Debian12 建議事項 安裝時處理項目 獨立磁區: 這部份主要是依據政府組態基準(GCB)設定，tmp是預防維運人員塞太大檔案造成系統功能異常。每的獨立磁區大小是實際狀況分配。 /tmp /var: 依據TWGCB-01-008-0008 /var/tmp: 依據TWGCB-01-008-0009 /var/log: 依據TWGCB-01-008-0013 /var/log/audit: 依據TWGCB-01-008-0014 /home: 依據TWGCB-01-008-0015 切割的完成的設定截圖如下：</description>
    </item>
    
    <item>
      <title>來架個網站吧-22.網站環境建置-安裝資料庫</title>
      <link>http://pollochang.work/post/1000-22.%E7%B6%B2%E7%AB%99%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE-%E5%AE%89%E8%A3%9D%E8%B3%87%E6%96%99%E5%BA%AB/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-22.%E7%B6%B2%E7%AB%99%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE-%E5%AE%89%E8%A3%9D%E8%B3%87%E6%96%99%E5%BA%AB/</guid>
      <description>來架個網站吧-22.網站環境建置-安裝資料庫 tags: 來架個網站吧 postgresql 我是目錄
昨天安裝完虛擬機範本之後，接下來就是安裝資料庫啦～
安裝資料庫可以說是一向大工程。小弟我本人三生有幸，天地父母都很寵我～讓我在目前短短職涯6年多一點點可以碰到
平價
奢華
古董
這三個資料庫，資料庫對我來說是一項深水莫測，頂點遙不可及的領域，因此我還是碰了一兩下子。
在我的目前職涯來說，平價的選項是: MySQL、Postgresql。這兩個資料庫部署可以很快，連上網路 sudo apt install mysql 等速成建立完成，立即在本機開發(H2說我更快！)。
奢華莫非 Oracle 莫屬，之前碰了 Fujitsu SPARC M12 外加 Oracle 當時最新版的，當時一張光碟在手宛如北市套房在我一樣。(有更貴的聽說還有)也是我目前碰過性能最好的資料庫，他的 RAC (Real Application Clusters)架構真的可以讓資料庫可連線數量近乎無限擴張，可以不用擔心資料庫連線不足問題。 有可能會造成程式越寫越爛，佔用調超多資料庫連線
古董目前就碰到 DB2 5.5 而已。
上述畢竟是工作經驗而已，其實也沒有什麼好炫耀的，因為還只是小小菜鳥而已。轉化成自己的經驗才是寶貴。
以下是我針對本期的平價菜單，希望大家可以飽食滿意。
環境規劃 OS:Debian 12 DB: Postgresql-15 安裝指令 安裝指令原則上，我是直接採取官方的說明。
sudo apt install gnupg gnupg2 gnupg1 sudo sh -c &amp;#39;echo &amp;#34;deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main&amp;#34; &amp;gt; /etc/apt/sources.list.d/pgdg.list&amp;#39; wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - sudo apt -y install postgresql-15 配置注意事項 在正式環境配置方面，大致上需要處理以下：</description>
    </item>
    
    <item>
      <title>來架個網站吧-23.網站環境建置-建立AP</title>
      <link>http://pollochang.work/post/1000-23.%E7%B6%B2%E7%AB%99%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE-%E5%BB%BA%E7%AB%8Bap/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-23.%E7%B6%B2%E7%AB%99%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE-%E5%BB%BA%E7%AB%8Bap/</guid>
      <description>來架個網站吧-23.網站環境建置-建立AP tags: 來架個網站吧 tomcat 我是目錄
Grails 在生產環境中，最佳的拍檔就是 tomcat 啦～簡單，可以快速部署的 Servlet容器。
然而tomcat受歡迎的背後，卻也背負不少的CVE認證，所以這邊我會先說明一下如何建立安全？的tomcat 服務。以下是濃縮版本，當然也歡迎在留言區補充～
建立安全的tomcat？ 在可怕的網路世界？能隱藏訊息就隱藏，能多做一點預防措施就多做一點吧。以下是我後來在部署tomcat服務會做的一些事項:
移除 tomcat 版本號 禁止自動部署 關閉遠端關閉服務port 刪除 webapps 內所有服務 移除 tomcat 版本號 刪除版本號最主要目的是為了防止對外洩漏tomcat 版本資訊，比較簡單的作法是直接在 conf/server.xml 指定 server name，如下：
&amp;lt;Connector server=&amp;#34;application server&amp;#34; /&amp;gt; 但是這樣的作法在 404 頁面 時仍然會出現 tomcat 版本資訊。為了解決這個狀況，目前現行可靠的作法是把 catalina.jar 打開之後，修改 ServerInfo.properties 裡面的資訊。
一行指令版本 export tomcatHome=&amp;#34;/opt/apache-tomcat&amp;#34; &amp;amp;&amp;amp;\ export tomcatVersion=&amp;#34;7.0.109&amp;#34; &amp;amp;&amp;amp;\ export javaHome=&amp;#34;/usr/local/jvm/jdk17_latest&amp;#34; &amp;amp;&amp;amp;\ mkdir -p ${tomcatHome}/catalina_jar-${tomcatVersion} &amp;amp;&amp;amp;\ cp ${tomcatHome}/apache-tomcat-${tomcatVersion}/lib/catalina.jar ${tomcatHome}/catalina_jar-${tomcatVersion} &amp;amp;&amp;amp;\ cp ${tomcatHome}/apache-tomcat-${tomcatVersion}/lib/catalina.jar ${tomcatHome}/catalina_jar-${tomcatVersion}/catalina.jar.bk &amp;amp;&amp;amp;\ unzip -q ${tomcatHome}/catalina_jar-${tomcatVersion}/catalina.jar -d ${tomcatHome}/catalina_jar-${tomcatVersion}/ &amp;amp;&amp;amp;\ sed -i &amp;#39;/^server.</description>
    </item>
    
    <item>
      <title>來架個網站吧-24.網站環境建置-編譯nginx</title>
      <link>http://pollochang.work/post/1000-24.%E7%B6%B2%E7%AB%99%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE-%E7%B7%A8%E8%AD%AFnginx/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-24.%E7%B6%B2%E7%AB%99%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE-%E7%B7%A8%E8%AD%AFnginx/</guid>
      <description>來架個網站吧-24.網站環境建置-編譯nginx tags: 來架個網站吧 nginx 我是目錄
最近工作真的忙到不可開交，庫存已經耗盡，所以我拿筆記檔一下 XDDD
話說是筆記，不過我還是加點解說吧～
想要用 CentOS7 為底的環境，想說目前(202310)還是有很多無法完成脫離 CentOS7 穩定的環境吧！但是這個平台雖穩，但也日益老舊，許多跳鍵也漸漸不再支援了，就讓我為他在附上一點色彩吧。
version 考慮到 CentOS7 本身的 OpenSSL 已經不符合網路安全要求，因此我這邊是另外獨自從 OpenSSL 官網下載原始碼編譯。
nginx: 1.22.1 OS: CentOS7 openssl: 1.1.1s 安裝編譯套件 yum update -y yum install -y gcc* openssl-devel pcre* patch git 設定參數 export compileRPMPath=&amp;#34;/home/pollo/nginx-build&amp;#34; 準備要的 module sticky-module: 這部份是我參考其他人作法保留的。 nginx-module-vts nginx_upstream_check_module nginx_cookie_flag_module: 進行覆載平衡時作為黏著使用，避免登入系統後突然跳到其他AP，不過隨著Redis 等記憶體資料庫的使用，似乎也不太需要了。 ModSecurity: 我想把nginx 加一點 WAF 功能 mkdir -p ${compileRPMPath} cd ${compileRPMPath} #下載指定版本的nginx export nginxVersion=&amp;#34;1.22.1&amp;#34; wget http://nginx.org/download/nginx-$nginxVersion.tar.gz tar -xzf nginx-$nginxVersion.tar.gz ln -sf nginx-$nginxVersion nginx ## 此版號為1.</description>
    </item>
    
    <item>
      <title>來架個網站吧-25.網站工作軟思維</title>
      <link>http://pollochang.work/post/1000-25.%E7%B6%B2%E7%AB%99%E5%B7%A5%E4%BD%9C%E8%BB%9F%E6%80%9D%E7%B6%AD/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-25.%E7%B6%B2%E7%AB%99%E5%B7%A5%E4%BD%9C%E8%BB%9F%E6%80%9D%E7%B6%AD/</guid>
      <description>來架個網站吧-25.網站工作軟思維 tags: 來架個網站吧 我是目錄
這二十幾天來都是一直在分享架設網站技術，從需求訪談、需求分析、開發網站、建置網站，本來下一個階段就是網站維運的部份了。後來看了參賽主題 [Modern Web] ，到底要怎麼保有現代化網頁技術?
是不斷學習新的流行框架？還是不斷深究舊有的技術框架？但是作為資訊網站最終的目的在於傳遞資訊，網頁設計的再花俏也不過僅僅如此而已。或許Debain官方網站首頁有做到精髓，簡單的設計沒有響應式、沒有太多太花俏的設計就表達了最重要的資訊: 下載Debian。
於是接下來幾天讓我稍稍的脫離一下「眼睛」看得見的部份，讓我寫一下在變化快速的現代網站技術中，身為專業的資訊工程師業保有哪些心法。或許明年回頭看我自己的作品，看到這邊可以知道過一年想法改變了多少。
接下來就讓我「看見」(https://tv.apple.com/tw/show/%E6%9C%AB%E6%97%A5%E5%85%89%E6%98%8E/umc.cmc.3s4mgg2y7h95fks9gnc4pw13m)
這一部電視劇真心推薦，真的會讓人真正的看見</description>
    </item>
    
    <item>
      <title>來架個網站吧-26.網站工作軟思維-不會</title>
      <link>http://pollochang.work/post/1000-26.%E7%B6%B2%E7%AB%99%E5%B7%A5%E4%BD%9C%E8%BB%9F%E6%80%9D%E7%B6%AD-%E4%B8%8D%E6%9C%83/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-26.%E7%B6%B2%E7%AB%99%E5%B7%A5%E4%BD%9C%E8%BB%9F%E6%80%9D%E7%B6%AD-%E4%B8%8D%E6%9C%83/</guid>
      <description>來架個網站吧-26.網站工作軟思維-不會 tags: 來架個網站吧 我是目錄
這篇算是我最近的工作寫照吧。因為碰了不該碰的領域，不會知道自己不會，只知道自己不會。
以前在專案當中預到了程式腳本都是五大碼、程式腳本共計五千多個檔案，這些要轉成萬國碼的時，也是相同的狀況。焦頭爛額的狀持續一個月也無法整理初一個頭緒，陷入一個終於解決一項問題卻發現有更多未知的狀況。這都還不是最糟的。
身邊，沒人知道如何處理。
對於一個團隊、或是自己是屬於從零到一的過程中往往是最痛苦的階段。可以很樂觀看待說：明天一定可以解決！也可以悲觀的看待：今天怎模又是一樣的狀況。不過對我來說，當天沒有辦法解決的問題我只會說，「我放棄了」，然後明天照樣繼續默默接手做下去，工作而已。
在資訊領域中，一個人不可能全部都懂，一個團隊也不可能一直有人知道怎做，是一向充滿未知的領域。不過很慶幸的是，在資訊軟體領域往往都是「人」去定義的世界，只要軟體能跑就有辦法解讀創造軟體的人的想法、當時的時空背景。有時候在翻閱使碼時，就好比像翻閱歷史文本一樣，有時候要先有一點時空背景認知才可以理解未什麼要這樣設計。
以上是我工作以來一點點的心得。
不過，等等！我怎在看 F5 BIG IP 的設定&amp;hellip;&amp;hellip;
說好的程式碼呢？</description>
    </item>
    
    <item>
      <title>來架個網站吧-27.網站工作軟思維-簡單管理_隨手筆記</title>
      <link>http://pollochang.work/post/1000-27.%E7%B6%B2%E7%AB%99%E5%B7%A5%E4%BD%9C%E8%BB%9F%E6%80%9D%E7%B6%AD-%E7%B0%A1%E5%96%AE%E7%AE%A1%E7%90%86_%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-27.%E7%B6%B2%E7%AB%99%E5%B7%A5%E4%BD%9C%E8%BB%9F%E6%80%9D%E7%B6%AD-%E7%B0%A1%E5%96%AE%E7%AE%A1%E7%90%86_%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98/</guid>
      <description>來架個網站吧-27.網站工作軟思維-簡單管理_隨手筆記 tags: 來架個網站吧 我是目錄
在這邊我絕對不會講一個團隊要如何完成專案，我只講個人。
因為工程師的工作性質往往偏向於單人完成單一項目作業，如何規劃把工作項目完成便是一項很重要的事情。以我目前的工作內容往往是研究如何解決問題，雖然沒有明定要求說要何時處理完畢，但是當我收到需求會問下列事情：
問題內容是什麼？ 希望如何處理？ 為什麼要使用此方式處理？ 需要在哪個時候完成？ 用這些問題簡單區分一下收到要處理的事情重要性質。
接下來，隨手紀錄處理問題的步驟更為重要，最好是先做紀錄在執行是最好的。特別是直接在生產環境中直接處理更要「先紀錄下來即將要做的事情在執行」。往往在親上問題火線時，會因為壓力造成疏忽。先紀錄再執行的最主要目的是強迫自己在當下保有有條理的執行事情，另一方面是為了事後追蹤處理過程是否恰檔。
最後在紀錄工作中比較難執行的項目是「持續每天紀錄所作的事」。不用紀錄很詳細，條列式紀錄今天大概處理哪些事情即可。</description>
    </item>
    
    <item>
      <title>來架個網站吧-28.網站工作軟思維-面對使用者</title>
      <link>http://pollochang.work/post/1000-28.%E7%B6%B2%E7%AB%99%E5%B7%A5%E4%BD%9C%E8%BB%9F%E6%80%9D%E7%B6%AD-%E9%9D%A2%E5%B0%8D%E4%BD%BF%E7%94%A8%E8%80%85/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-28.%E7%B6%B2%E7%AB%99%E5%B7%A5%E4%BD%9C%E8%BB%9F%E6%80%9D%E7%B6%AD-%E9%9D%A2%E5%B0%8D%E4%BD%BF%E7%94%A8%E8%80%85/</guid>
      <description>來架個網站吧-28.網站工作軟思維-面對使用者 tags: 來架個網站吧 我是目錄
在網站開發領域當中，在台灣的工程師往往會面對到自己開發出來的使用者吧？可以說談灣的產業向來如此。我第一份的工作內容是「客服工程師」，工作內容是：接電話、deb bug、外加文書打雜。現在回想起來真的是一項 煩心、煩力、煩嘴 的工作崗位，是一個對職涯無法發展長久的工作型態。不過在這個工作中崗位，我可以知道如何幫使用者表達「情緒」。
有時候使用者會報怨系統好難使用、系統又掛了、突然要求幫忙修改資料&amp;hellip;&amp;hellip;等突發的狀況，而且有時話中挾著殺氣聲。身為第一線的受害者，一開始當然會直接向主管反應，不過似乎過了一季也還是一樣。
工作有電話紀錄，一開始我也不是很認真在記。發現在過往與主管溝通中，缺乏證據說名使用者不滿。發現這點之後我變很「認真」的紀錄每一通的電話內容，等累積滿兩週一後，把問題類型與程式加以分類繪製成曲線圖項主管報告(其實有點像股票的柱狀圖)，說：你再不解決現況，我這邊得到的電話越來越多。有了使用者的「情緒曲線圖」這個工具，我這邊的電話似乎漸漸的減少，過了半年之後我也開始有空閒的時間可以研究偷懶我喜歡的技術。
後來工作接觸到需求訪談分析，因為是暨有的系統功能擴充，同時也會真正接觸到使用者是如何實際操作系統。透過使用者操作系統的實際觀察，其實可以很清楚知道系統設計的操作細節需要進行改進，對網站開發人員是一件難得的經歷。不過要讓使用者放心的在工程師面前操作，前提之下要先學會讓對方放下心防。不然對方只會一直問：這樣操作是對的嘛？
到了這兩年已經轉成技術後勤部門，每天碰的就只是技術文件、各式硬體、各式軟體、各式技術需求，坦白說就只是碰機器人，跟人類的對談往往也不過短短一百多句而已。最近突然要直接去客戶處理系統問題，發現要開口溝通真的比當初踏入這份領域時困難的多。
網站最終的使用者還是人，因此有機會可以傾聽一下使用者的聲音，或許可以知道網站系統不足的地方。</description>
    </item>
    
    <item>
      <title>來架個網站吧-29.網站工作軟思維-好奇嘗試</title>
      <link>http://pollochang.work/post/1000-29.%E7%B6%B2%E7%AB%99%E5%B7%A5%E4%BD%9C%E8%BB%9F%E6%80%9D%E7%B6%AD-%E5%A5%BD%E5%A5%87%E5%98%97%E8%A9%A6/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-29.%E7%B6%B2%E7%AB%99%E5%B7%A5%E4%BD%9C%E8%BB%9F%E6%80%9D%E7%B6%AD-%E5%A5%BD%E5%A5%87%E5%98%97%E8%A9%A6/</guid>
      <description>來架個網站吧-29.網站工作軟思維-好奇嘗試 tags: 來架個網站吧 我是目錄
現在網站資訊變化快速，在這個節奏速度快如飛箭的洪流中，保有持續的學習動力是對資訊專業人員很重要的事情。
在目前的工作經驗中隨著處理問題的愈多，發現除了要學習新的技術框架之外，在必要的時候也得學習十幾年前的技術(如:DB2)。畢竟舊有的系統可以繼續提供他的服務，必然有他的價值存在。然而，需要有什麼動力來保持持續學習呢？我給我的答案是「好奇」。
在學習網站資訊世界中「好奇」是嘗試新技術的動力，可以每個都試一下。試一下 CSS 排版、試一下虛擬機、有機會就嘗試用 SPARC 電腦就用吧，永遠都不要排斥眼前到手的機會，不管當下會不會都試試看。在資訊技術領域有一個特質、複製成本低、失敗成本低。如果害怕失敗就不敢去嘗試，那就項辦法複製一樣的環境吧，在自己複製的環境中勇敢的不斷去嘗試。</description>
    </item>
    
    <item>
      <title>來架個網站吧-30.網站工作軟思維-試著學會說人話</title>
      <link>http://pollochang.work/post/1000-30.%E7%B6%B2%E7%AB%99%E5%B7%A5%E4%BD%9C%E8%BB%9F%E6%80%9D%E7%B6%AD-%E8%A9%A6%E8%91%97%E5%AD%B8%E6%9C%83%E8%AA%AA%E4%BA%BA%E8%A9%B1/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/1000-30.%E7%B6%B2%E7%AB%99%E5%B7%A5%E4%BD%9C%E8%BB%9F%E6%80%9D%E7%B6%AD-%E8%A9%A6%E8%91%97%E5%AD%B8%E6%9C%83%E8%AA%AA%E4%BA%BA%E8%A9%B1/</guid>
      <description>來架個網站吧-30.網站工作軟思維-試著學會說人話 tags: 來架個網站吧 我是目錄
網站在我的觀點中就是在人類世界中扮演資訊交換的角色，而資訊工程師只不過是把人類的語言轉變成電腦世界的語言並讓執行提供服務而已。我希望未來的自己別只專注在技術而已，同時也要注意需求動向這樣才不會落入技術的牢房中。另外，也繼續保持分享技術知識的習慣，唯有透過與人分享更可以更有效率的將技術轉化成自己內在的知識。
終於到了最後一天啦～這是我第二年參加鐵人賽，不過今年的鐵人賽對我來說相當的鐵人。怎說呢？首先在第七天我意外的手術開刀，躺了整整一天，那天我趁著手術當天凌晨趕快發文。再來是工作上碰到了系統問題，必須騰出時間研究，持續好幾天一邊研究問題、一邊打文章發文。再來就是二十天突然中了A型流感燒了兩天40度，發燒那幾天根本無法思考，全憑意志發文。所以先給我自己鼓勵一下。
最後一天，我想給我未來的自己的軟思維是「試著說人話」。希望未來五年，不會因工作而逐漸喪失與使用者溝通的能力。</description>
    </item>
    
    <item>
      <title>在CLI 製作開機USB</title>
      <link>http://pollochang.work/post/2024-02-28-%E8%A3%BD%E4%BD%9C%E9%96%8B%E6%A9%9Fusb/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E8%A3%BD%E4%BD%9C%E9%96%8B%E6%A9%9Fusb/</guid>
      <description>最近再把我自己的另一台筆電重新安裝。趁重新安裝時，安裝Debian，因為我已經很習慣用這個作業系統工作了。安裝完成之後，發現原本抓的有臭蟲，所以就上網重新安裝一次。
之前製作USB開機碟都是在windows上，而在Linux上卻沒有用過，因此順便紀錄一下過程。
工具 unetbootin 原本我都是用Rufus，但是只有支援Windows。於是我找到Unetbootin這個懶人工具。
下載連結UNetbootin for Debian (64-bit) for Linux
安裝
suod apt install ./unetbootin_575-1_amd64.deb 需要root 執行 執行時記得需要用root權限執行，不然會讀不到USB隨身碟。
jameschang@JamesChangNB:~/下載$ xhost local:root non-network local connections being added to access control list jameschang@JamesChangNB:~/下載$ sudo QT_X11_NO_MITSHM=1 /usr/bin/unetbootin jameschang@JamesChangNB:df -Th /dev/sdb1 vfat 58G 2.9G 56G 5% /media/jameschang/D-LIVE 10_1 jameschang@JamesChangNB:~/下載$ sudo umount /dev/sdb1 jameschang@JamesChangNB:~/下載$ sudo mkfs.vfat /dev/sdb1 mkfs.fat 4.1 (2017-01-24)
jameschang@JamesChangNB:sudo dd if=/home/jameschang/debs/debian-10.10.0-amd64-netinst.iso of=/dev/sdb1
sudo cp /home/jameschang/debs/debian-10.10.0-amd64-netinst.iso /dev/sdb1
fdisk /dev/sdb1
mkfs.vfat -I /dev/sdb1
參考資料 UNetbootin for Debian (64-bit) for Linux</description>
    </item>
    
    <item>
      <title>安裝Docker</title>
      <link>http://pollochang.work/post/2024-02-28-%E5%AE%89%E8%A3%9Ddocker/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E5%AE%89%E8%A3%9Ddocker/</guid>
      <description>OS: Debian 10 Debian 11
初次安裝先移除舊相關套件 sudo apt-get remove docker docker-engine docker.io containerd runc 安裝 加入 gpg sudo apt-get update sudo apt-get install \ apt-transport-https \ ca-certificates \ curl \ gnupg \ lsb-release curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \ &amp;#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \ $(lsb_release -cs) stable&amp;#34; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null 安裝docker 引擎 sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io 將使用者加入docker群組 sudo usermod -aG docker [userName] 安裝docker-compose https://github.</description>
    </item>
    
    <item>
      <title>我的linux日常生活-6.安裝開發工具</title>
      <link>http://pollochang.work/post/2024-02-28-%E5%AE%89%E8%A3%9D%E9%96%8B%E7%99%BC%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E5%AE%89%E8%A3%9D%E9%96%8B%E7%99%BC%E5%B7%A5%E5%85%B7/</guid>
      <description>我的linux日常生活-6.安裝開發工具 tags: 我的linux日常生活 git 下面是git 安裝指令與設定方式
安裝
sudo apt install git 設定 git
git config --global user.name PolloChang git config --global user.email james89926282@gmail.com git config --global core.editor &amp;#34;vim&amp;#34; 產生金鑰並取得公鑰
ssh-keygen cat /home/jameschang/.ssh/id_rsa.pub 之後再把公鑰上傳到git sever 就可以了
檢查有成功
ssh -T git@github.com 遠端桌面軟體-Remmina Remmina 是我比較習慣的遠端桌面軟體，它可以支援ssh、sftp、RDP等，常用的遠端通訊定。
一般安裝Ubuntu 時，通常就已經內建了。
安裝指令如下：
sudo apt install remmina 系統監控工具-nmon nmon 是在終端機顯示的監控工具，可以即時監控系統的狀況，也可以長時間採集系統資訊。下面為安裝方法：
sudo apt install nmon 下面為即時監控的指令
nmon 文字編輯器-vim Debian、Ubuntu 通常不自帶 vim 編輯器，所以需要特別安裝。
sudo apt install vim 流程圖與雛型工具-draw.io DrowIO 是我比較常用來繪製流程圖與雛型，雖然它可以直接在瀏覽器直接繪畫，但是先決條件網路品質必須要很好，像我在家如果需要加班（好命苦）時，手機網路有時候會收不到訊號，所以必須獨立安裝軟體。</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 01-windows轉Linux的過程</title>
      <link>http://pollochang.work/post/001-windows%E8%BD%89linux%E7%9A%84%E9%81%8E%E7%A8%8B/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/001-windows%E8%BD%89linux%E7%9A%84%E9%81%8E%E7%A8%8B/</guid>
      <description>我的Linux生活日記 01-windows轉Linux的過程 只是為了工作用而已 在大學時就有開始自己接觸 Ubuntu 了，記得第一次接觸是大學時，筆記型電腦越跑越慢，所以決定重新安裝作業系統。依稀記得看到Ubuntu 的桌面可以3D翻轉切換覺得很炫，所以決定安裝看看。安裝一陣子，其實也沒有一陣子啦！也不過一天而已，發現沒有辦法安裝我最喜歡的遊戲—坦克世界，所以隔天我立刻安裝回windows了。
後來工作後，在執行某次專案時，有一向需求是windows 2003 轉成 Linux。為了在短短三個月的開發期程，我乾脆把開發環境一次改成Linux ，只是為了把所有在Linux出現的 Bug 快速清除而已。
作業系統評估 在選擇作業系統中，我其實是有很明確的方向：目標是在工作中完全使用Linux。因此我列下在工作中會使用到的工具，並找出有相容Linux版本，如果沒有就得尋找替代方案。
下列是我之前評估的清單
軟體項目 有發行或相容Linux Linux 替代方案 只能安裝在windows intelliJ IDEA 2019 以上 有 Netbeans 6.7 有 JDK 1.4 以上 有 MS Office Liber Office v Line Line Chrome 版 v notepad++ vs code Toad for DB2 DBeaver Toad for Oracle DBeaver mockup draw io Chrome 有 Internet Explorer(IE) v Forti Client 有 微軟新注音 新酷音 Soap UI 有 Git-Tutorials smart git jmeter 有 Microsoft Defender ClamTK Spotify 有 kettle 有 Git 有 7-zip 有 BIPublisherDesktop v 一個痛苦轉變 為了工作，我必須把當時工作的電腦安裝 Linux ，但是工作主力主機也不可能說重新安裝就重新安裝。畢竟我自己也需要適應不同作業系統的操作邏輯，所以決定買一台筆電試試看。物色了幾天決定是 「DELL Latitude E7270」 這種機型，決定是原廠有拍胸脯保證一定可以安裝 ubuntu 14.</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 02-安裝Debian</title>
      <link>http://pollochang.work/post/004-%E5%AE%89%E8%A3%9Ddebian/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/004-%E5%AE%89%E8%A3%9Ddebian/</guid>
      <description>我的Linux生活日記 02-安裝Debian 今天讓我詳細介紹如何安裝Debian吧！老實說安裝Debian步驟真的超多的。我記得我第一次接觸Debian 10 安裝時，有點不知所措。因為步驟真的比Ubuntu 、CentOS 多好多，因此我在這邊簡單帶一下安裝步驟。
Debian 簡介: 自由(free) 的信仰 說到Debian 這個發行版本，一定得提到 free 、 none-free 。首先這邊需要很嚴肅的跟大家說 free 這一詞是 自由 的意思，意指該軟體可以被世界上任何一個人使用、複製甚至販售，而不是 免費 的意思。none-free 就是不符合上述 free 的規範啦。所以從官方網站下載的一定是 free 的版本。
這個觀念很重要，如過是硬體有 intel 無線網卡，需要特別需要去找 iwlwifi 在安裝前準備。第一次安裝我舊碰到這個問題，可花費我兩三天的時間去處理。
另外我想介紹 Debian 的原因是: 他的安裝步驟很多 它是我接觸過作業系統中，有多都是以Debian 為基底去做改良，例如：ubuntu、Proxmox VE、OpenSwitch OPX、kali。所以學習使用Debian 投資報酬率很高。(我覺的啦)
下載 Debain 官方網址: https://www.debian.org/ 一進入官方網站，你會發現這個官網真陽春，真的好像是我會寫出的網站排版：HTML 加 CSS 簡單稍微排版。然而在首頁的右下方就出現一個大大個下載，提供你下載。
: https://cdimage.debian.org/mirror/debian/dists/ 如果想要下載之前版本的版本可以從這個網站下載，當然也可以下載Debain 衍生的發行板，如：Ubuntu、kali。
下載及準備驅動軟體 Debian 的官網入口有提供小型安裝檔，只有300多MB 而已，不過安裝過程當中建議連接網路，如果有安裝面環境需求時會需要從網路上下載套件。如果安裝的環境中，網路環境相當堪憂，我這邊建議去準備8GB 以上的隨身碟，並且到網路穩定的環境下載自己要的版本DVD/USB 版本。
我兩台電腦安裝的經驗當中，筆電我是下載DVD/USB 版本，選擇的當案是「debian-live-10.9.0-amd64-gnome.iso」，因為當時安裝的網路環境只有300kbps/s，相當慢。而自己組裝桌機時，是使用小型安裝檔。兩者安裝的流程其實是一樣，只差DVD/USB 版本只是預先將桌面環境下載下來而已。
關於驅動軟體，對於 Linux 不熟悉的人來說都有聽過一個傳聞，就是安裝Linux 需要自己另外去硬體廠商網站下載Linux 版本的驅動軟體。其實這個傳聞的聽說，我也是說聽說啦！是聽說以前的確需要特別去找，但是已我的經驗當中，絕大部分的驅動軟體都可以不用自行去下載，如果你是用Ubuntu自然更不會遇到這個問題。
但是當我安裝Debian 時卻碰到 筆電的無線網卡無法辨認的問題，後來我上網查筆電的規格後，發現無線網卡是Intel ，加上Debian 有將軟體類型區分 main、contrib、non-free、non-us，所以我必須特去找Intel的驅動軟體iwlwifi</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 03-建立一個友善的終端機人機介面</title>
      <link>http://pollochang.work/post/003-%E5%BB%BA%E7%AB%8B%E4%B8%80%E5%80%8B%E5%8F%8B%E5%96%84%E7%9A%84%E7%B5%82%E7%AB%AF%E6%A9%9F%E4%BA%BA%E6%A9%9F%E7%95%8C%E9%9D%A2/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/003-%E5%BB%BA%E7%AB%8B%E4%B8%80%E5%80%8B%E5%8F%8B%E5%96%84%E7%9A%84%E7%B5%82%E7%AB%AF%E6%A9%9F%E4%BA%BA%E6%A9%9F%E7%95%8C%E9%9D%A2/</guid>
      <description>我的Linux生活日記 03-建立一個友善的終端機人機介面 既然都安裝Lunx而且畢生都得跟Linux 為伍，必須得跟文字介面為伍。但是我記性偏偏不好，大腦記憶體只有256KB少的可憐，所以安裝完Linux第一件事情是優化文字介面。
安裝必要套件 sudo apt -y install curl wget git 下載字型 下載 Meslo Nerd Font 讓 terminal 可以正常顯示icon
MesloLGS NF Regular.ttf MesloLGS NF Bold.ttf MesloLGS NF Italic.ttf sudo mkdir -p /usr/local/share/fonts/custom sudo wget -P /usr/share/fonts/custom https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf sudo wget -P /usr/share/fonts/custom https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf sudo wget -P /usr/share/fonts/custom https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf sudo fc-cache -v -f 安裝 Tabby terminal 官方網站: https://tabby.sh/
下載網址: https://github.com/Eugeny/tabby/releases
安裝指令
curl -s https://packagecloud.io/install/repositories/eugeny/tabby/script.deb.sh | sudo bash sudo apt install tabby-terminal 設定字型為 MesloLGS NF</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 032-history時間戳記</title>
      <link>http://pollochang.work/post/032-history%E6%99%82%E9%96%93%E6%88%B3%E8%A8%98/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/032-history%E6%99%82%E9%96%93%E6%88%B3%E8%A8%98/</guid>
      <description>我的Linux生活日記 032-history時間戳記 history 時間戳記
未配置前 pollochang@debian-12-template:~$ history 1 sudo apt update 2 sudo apt install qemu-guest-agent vim firewalld wget curl autofs rsync 3 sudo vim /etc/profile.d/ssh-login-info.sh 4 sudo chmod +x /etc/profile.d/ssh-login-info.sh 5 sudo apt install tmux 6 history 配置後 pollochang@debian-12-template:~$ history 1 2023-09-18 16:10:55 sudo -i 2 2023-09-18 16:10:55 sudo apt update 3 2023-09-18 16:10:55 sudo apt install qemu-guest-agent vim firewalld wget curl autofs rsync 4 2023-09-18 16:10:55 sudo vim /etc/profile.</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 04-一些電腦基本設定</title>
      <link>http://pollochang.work/post/006-%E4%B8%80%E4%BA%9B%E9%9B%BB%E8%85%A6%E5%9F%BA%E6%9C%AC%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/006-%E4%B8%80%E4%BA%9B%E9%9B%BB%E8%85%A6%E5%9F%BA%E6%9C%AC%E8%A8%AD%E5%AE%9A/</guid>
      <description>我的Linux生活日記 04-一些電腦基本設定 接下來就是一些電腦基本設定啦。由於這次是以個人電腦使用取向為方向，所以原則上電腦設定的部份已圖形介面為主。以下就是新安裝電腦之後會用的設定。
移除娛樂性質軟體 apt remove aisleriot four-in-a-row gnome-2048 gnome-chess gnome-games gnome-klotski gnome-mahjongg gnome-mines gnome-nibbles gnome-robots gnome-sudoku gnome-taquin lightsoff hitori swell-foop tali gnome-tetravex quadrapassel five-or-more cheese gnome-weather gnome-sound-recorder transmission-gtk transmission-common gnome-music gnome-system-monitor gnome-characters gnome-maps 好用的終端機目錄工具 ranger sudo apt install ranger 快捷建跟 vim 一樣
另外我也想玩 Midnight Commander
設定快捷鍵-Tabby 進入設定 settings &amp;gt; Devices &amp;gt; keboard 新增快捷鍵 輸入 tabby 按下你想要的設定：像我就已經習慣 ubuntu 呼叫終端機的方式 Ctrl + Alt + t 設定閒置關閉螢幕並鎖上 工作一天8小時，人總會離開電腦座位的，離開的過程中無法確保家中的小貓、工作調皮的同事會對你未完成的系統加什麼好料，因此養成離開座位就螢幕就上鎖的好習慣。但是偶爾還是會不小心忘記上鎖，所以在這邊記得設定閒置上鎖。
settings &amp;gt; Power &amp;gt; Power Saving 安裝防火牆 我認為防火牆是必須膽安裝的，因為在開發軟體的過程中本機可能會安裝一些可以對外服務的工具，例如：docker、tomcat、postgresql。因此防火牆是基本要安裝的。</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 07-硬碟分割</title>
      <link>http://pollochang.work/post/007-%E7%A1%AC%E7%A2%9F%E5%88%86%E5%89%B2/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/007-%E7%A1%AC%E7%A2%9F%E5%88%86%E5%89%B2/</guid>
      <description>我的Linux生活日記 07-硬碟分割 最近忙到爆炸了，所以我就拿很久以前的筆記發文偷懶，算是在工作中寫筆記的好處吧?
最近在工作上有一顆新的硬碟新增到主機上，順便紀錄一下處理步驟吧。
處理步驟如下：
取得硬碟資訊，確認實際要格式化那一顆硬碟 規劃硬碟分割格式 執行分割 新增要掛載的目標目錄 掛載目錄 取得硬碟 UUID 寫入 fstab 取得硬碟資訊 在分割硬碟之前記得先確認一下新增硬碟的詳細資訊，例如：硬碟容量大小等等。如果不知道可以下df -h記下哪些硬碟已經被使用了，之接下來檢查目前有哪些硬碟還沒有被掛載就可以知道目標的硬碟資訊。
debian10@debian10:~$ df -h # 檢查目前的硬碟狀況 Filesystem Size Used Avail Use% Mounted on udev 2.0G 0 2.0G 0% /dev tmpfs 395M 5.5M 390M 2% /run /dev/vda1 49G 2.0G 44G 5% / tmpfs 2.0G 0 2.0G 0% /dev/shm tmpfs 5.0M 0 5.0M 0% /run/lock tmpfs 2.0G 0 2.0G 0% /sys/fs/cgroup tmpfs 375M 0 375M 0% /run/user/1000 再用 fdisk -l查詢要新增的硬碟是那一顆。</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 08-LVM-新增硬碟-LVM</title>
      <link>http://pollochang.work/post/008-%E6%96%B0%E5%A2%9E%E7%A1%AC%E7%A2%9F-lvm/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/008-%E6%96%B0%E5%A2%9E%E7%A1%AC%E7%A2%9F-lvm/</guid>
      <description>我的Linux生活日記 08-LVM-新增硬碟-LVM Physical Drivers / Partitions / PV(Physical Volume) / VG(Volume Group) / LV(Logical Volume) 的相互關係 情境敘述 新增一顆5GB的硬碟，並以 LVM ( Logical Volume Management ) 管理空間。硬碟檔案格式為 ext4。
新增硬碟步驟 虛擬機新增硬碟 取得硬碟資訊，確認實際要格式化那一顆硬碟 計劃分割表 新增 physical volume 新增 Volume Group 檢查 Volume Group 可以配置的大小 將 Volume Group 可用的空間加入 Logical Volume 硬碟分割 掛載硬碟 虛擬機新增硬碟 首先未虛擬機新增一顆5 GB 的硬碟吧！
虛擬機這邊我是用 kvm/qemu，下面是新增的步驟。
取得硬碟資訊，確認實際要格式化那一顆硬碟 取得目前掛載資訊 $ sudo df -h # 檢查目前的硬碟狀況 Filesystem Size Used Avail Use% Mounted on udev 479M 0 479M 0% /dev tmpfs 99M 3.</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 09-LVM-新增硬碟到原本的LVM中</title>
      <link>http://pollochang.work/post/009-lvm-%E6%96%B0%E5%A2%9E%E7%A1%AC%E7%A2%9F%E5%88%B0%E5%8E%9F%E6%9C%AC%E7%9A%84lvm%E4%B8%AD/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/009-lvm-%E6%96%B0%E5%A2%9E%E7%A1%AC%E7%A2%9F%E5%88%B0%E5%8E%9F%E6%9C%AC%E7%9A%84lvm%E4%B8%AD/</guid>
      <description>我的Linux生活日記 09-LVM-新增硬碟到原本的LVM中 昨天有新增一塊LVM test-lv，今天我們要新增一塊 1GB 硬碟並規劃在 test-lv 裡進行線上擴容。
情境敘述 新增一開硬碟，並且把空間放置在已經存在的 Logical Volume 中。
步驟 虛擬機新增硬碟 取得硬碟資訊，確認實際要格式化那一顆硬碟 計劃分割表 新增 physical volume 擴充 Volume Group 進行 LV 擴充 虛擬機新增硬碟 取得硬碟資訊，確認實際要格式化那一顆硬碟 取得目前掛載資訊 $ sudo df -h # 檢查目前的硬碟狀況 Filesystem Size Used Avail Use% Mounted on udev 478M 0 478M 0% /dev tmpfs 99M 3.0M 96M 4% /run /dev/vda1 19G 1.5G 17G 9% / tmpfs 494M 0 494M 0% /dev/shm tmpfs 5.0M 0 5.0M 0% /run/lock tmpfs 494M 0 494M 0% /sys/fs/cgroup /dev/mapper/test--pv--1-test--lv 4.</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 10-Debian 使用心得</title>
      <link>http://pollochang.work/post/010-debian%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/010-debian%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</guid>
      <description>我的Linux生活日記 10-Debian 使用心得 最近工作忙炸了，所以我厚臉皮用很久以前的文章檔一下～
心得 當初會接觸Debian 這個作業系統是因為我想找一個穩定的發行板，也確實Debian 相比Ubuntu 穩定很多，很少在更新作業系統後出現問題。
踏入Debian 初期，常常發現有驅動軟體安裝不了，例如：intel wifi 、nVidia 顯卡驅動程式等等。後來才發現是這個自由社群的政策，同時也漸漸理解何謂是 free、none-free。但對於一個一個平凡的使用者來說，可以順順的用就好了，
後來也有嘗試使用test版本。Test 版本也算穩定，我自己是在筆記型電腦安裝 bookworm 測試版本。在某次的更新過後，出現了藍芽無法啟用、新酷音輸入法無法輸入注音，對於把筆電當作生產力工具的我是無法忍受的事情，最後只能安裝Debian buster。
下列是 Debian buster 、Debian bullseye 、Debian bookworm 一點心得
Debian buster 這個版本我覺的是三個中，最穩定的版本。穩定其實也是預設的軟體相對比較舊所換來的。如果要使用比較新穎的功能就無法。
目前，這個版本比較適合安裝在我自己的生產力筆記型電腦中，因為這三者中是最穩定的。
Debian bullseye 目前我自己的工作主機是使用這個版本，會挑這個版本原因是我有買較新的硬體設備(2011.02自己組的主機)，在這個版本自帶的驅動程式比 buster 相較穩定。
Debian bookworm 在我的筆記型電腦有一段時間是安裝這個版本。會挑選這個主因是看上 Gnome 40 自帶的觸控版操做模式，但是目前正在測試階段，在某次更新後藍芽、注音輸入法接無法操作後就安裝回 buster 版本。
但不得不說這個版本在筆電上有很好的電耗比，我曾經在電池滿格狀況下忘記關機，待機一天也只掉50%，而在 buster 卻掉了80%。
等到 bookworm 轉為 stable 時，我會想升級到這個版本。
以上是我使用 Debian 一點小小心得。繼續加班 m)&amp;hellip;QAQ&amp;hellip;(m</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 11.將非安裝軟體新增到程式清單</title>
      <link>http://pollochang.work/post/011-%E5%B0%87%E9%9D%9E%E5%AE%89%E8%A3%9D%E8%BB%9F%E9%AB%94%E6%96%B0%E5%A2%9E%E5%88%B0%E7%A8%8B%E5%BC%8F%E6%B8%85%E5%96%AE/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/011-%E5%B0%87%E9%9D%9E%E5%AE%89%E8%A3%9D%E8%BB%9F%E9%AB%94%E6%96%B0%E5%A2%9E%E5%88%B0%E7%A8%8B%E5%BC%8F%E6%B8%85%E5%96%AE/</guid>
      <description>我的Linux生活日記 11.將非安裝軟體新增到程式清單 在現實工作中，有許多軟體釋免安裝的，例如：iReport、kettle、intellij idea。
大多數免安裝軟體的啟動方式都會在軟體的 bin 資料夾中找到類似 start.sh 的檔案，這時候只需要在終端機下 bash [軟體根目錄]/bin/start.sh 就可以啟動了。
但是看到Gome 的華麗桌面難道Linux 不可以向 Windows 一樣在程式清單新增啟動程式的小圖案，方便在使用過程中找出程式？
答案是可以的，只要在下列目錄新增文件就可以。
/usr/share/applications 是顯示在所有使用者的顯示清單中。 ~/.local/share/applications 只會縣市在當前使用者的程式清單中。 在上述目錄底下新增 [xxxxx.desktop] 系統就會自動新增程式捷徑到程式單清單中。
這次我以 kettle 軟體當範例：
首先直接新增一個捷徑配置檔 PentahoDataIntegration.desktop
sudo vim /usr/share/applications/PentahoDataIntegration.desktop 輸入以下內容:
[Desktop Entry] Version=1.0 # 指這份文件的版本 Type=Application # [必須填] Name=PentahoData # [必須填]要顯示的程式說明 Path=/usr/local/etc/data-integration Icon=/usr/local/etc/data-integration/spoon.ico # 要顯示的icon Exec=/usr/local/etc/data-integration/spoon.sh # 要執行的檔案位址，當type 是 Application 才會有意義 Comment=PentahoData # 說明 Categories=Development;IDE;ETL; # 程式歸類 Terminal=false 結果如圖
上述範例只是我比較常用的詳細的話可以閱讀Desktop Entry Specification這篇
參考資料 Desktop Entry创建Linux程序的快捷方式 Kyunban</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 12.老闆要我連VPN-FrotiClient</title>
      <link>http://pollochang.work/post/012-%E8%80%81%E9%97%86%E8%A6%81%E6%88%91%E9%80%A3vpn-froticlient/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/012-%E8%80%81%E9%97%86%E8%A6%81%E6%88%91%E9%80%A3vpn-froticlient/</guid>
      <description>我的Linux生活日記 12.老闆要我連VPN-FrotiClient 之前在工作中時有遇到要安裝VPN 端點工具，而VPN 的環境是用 Forticlient 實踐的。在官方網站中也有針對 Linux 開發，所以只需要去官方下載Linux 版本就可以了！怎樣，是不是比想像中還要簡單呀！
FrotiClient 下載 FrotiClient 下載
在這邊我們直接下載 僅限 FortiClient VPN 就可以了。
然後針對Linux 是 Debian 還是 RedHat 系列下載對應的軟體包，我是Debain 所以就下載 .deb。
安裝 $ sudo apt install ./forticlient_vpn_7.0.0.0018_amd64.deb 設定連線 安裝完成之後，開始 fortiClient 連線視窗，依VPN 伺服器的設定就可以了。
或是帥氣的下指令也是可以
新增連線 $ /opt/forticlient/fortivpn edit my_vpn_name ===================== Create new VPN profile: my_vpn_name ===================== Remote Gateway: xxx.xxx.xxx.xxx Port [default=443]: xxx Authentication (1.prompt / 2.save / 3.disable) [default=1]: 2 Username: xxxxx Client Certificate (.p12 file URL) [default=None]: Do not Warn Invalid Server Certificate (y/n) [default=n]: y 使用連線 /opt/forticlient/fortivpn connect my_vpn_name 錯誤訊息 Cannot autolaunch D-Bus without X11 $DISPLAY 當初我在伺服器上安裝 VPN 端點時就出現這個問題。</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 13.常用指令(一)</title>
      <link>http://pollochang.work/post/013-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E4%B8%80/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/013-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E4%B8%80/</guid>
      <description>我的Linux生活日記 13.常用指令(一) 學習Linux 當中，用圖形界面是我依開始接觸的起步方式，但是我當初會接觸Linux 的原因是工作關係，加上在網路上的資源大多數是以CLI 為操作界面，所以如何透過文字界面操作就變成我在學習路上必經的過程。
其實，在處理一些重複的事情，透過指令方式會比透過圖形界面來的有效率，例如：上傳檔案到不同的主機上。前提得學會如何下指令，接下來這邊就介紹在日常生活中常用的指令。
登入系統 ssh 在Linux 世界中，登入方式很長透過SSH 服務登入，指令如下：
# ssh [userName]@[ip] -p [port] jameschang@JamesChangNB:~$ ssh pollochang@192.168.56.3 -p 22 pollochang@192.168.56.3&amp;#39;s password: ssh 就是只透過 ssh 協定連接要遠端的主機
pollochang 就是使用者帳號
192.168.56.3 是你要登入主機的IP
-p 22 指透過阜號 22 登入，不過這邊通常不用特別定，預設就是22 port。
按下 enter 之後就會進行登入，有連接成功後對方的系統就會要求你輸入登入密碼啦～
登入成功就會進入這個畫面
****Linux pollochangWorking 4.19.0-17-amd64 #1 SMP Debian 4.19.194-2 (2021-06-21) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright.</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 13.常用指令(二)</title>
      <link>http://pollochang.work/post/014-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E4%BA%8C/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/014-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E4%BA%8C/</guid>
      <description>將文件內容輸出到終端機 cat 如果需要檢視文件內容，而且輸入到終端機畫面可以使用cat
jameschang@JamesChangNB:~/下載$ cat test.txt 測試文字 english 將文件內容輸出到終端機 more 如果文件比較大，如 20MB 用 more 可以用作為輸出緩衝，讓終端機不會一下輸出所有文件內容。
more /var/log/tomcat/catalina.out 將文件內容輸出到終端機 tail 可以作為日誌文件輸出工具
tail -f /var/log/tomcat/catalina.out 搜尋文件內容 grep 如果需要搜尋文件內容關鍵字可以使用grep，用法如下：
jameschang@JamesChangNB:~/下載$ cat test.txt | grep english english # [文件內容] | grep [關鍵字] 編輯文件工具 vim 在linux 中常內建的文字編輯器是vi或是vim，用法如下
jameschang@JamesChangNB:~/下載$ vim test.txt 常用快捷鍵
:w -&amp;gt; 儲存
:q -&amp;gt; 離開
:q! -&amp;gt; 不儲存直接離開
i -&amp;gt; 編輯
:wq -&amp;gt; 儲存後離開
dd -&amp;gt; 刪除該行文字
yy -&amp;gt; 複製該行文件
p -&amp;gt; 複製文字後，將複製內容輸入選擇的下行</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 15.系統檢測工具</title>
      <link>http://pollochang.work/post/015-%E7%B3%BB%E7%B5%B1%E6%AA%A2%E6%B8%AC%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/015-%E7%B3%BB%E7%B5%B1%E6%AA%A2%E6%B8%AC%E5%B7%A5%E5%85%B7/</guid>
      <description>我的Linux生活日記 15.系統檢測工具 今天我整理一下之前自己在Linux 家用或工作主機上檢視統硬體的方法。
CPU lscpu lscpu可以取得CPU的架構(x86, x86_64&amp;hellip;等等)、核心數量、執行緒數量、頻率(從不同核心的運行頻率中挑選最大的來顯示)和快取大小。使用方法很簡單，直接在終端機輸入以下指令即可
lscpu 執行結果 &amp;gt; $ lscpu Architecture: x86_64 CPU op-mode(s): 32-bit, 64-bit Byte Order: Little Endian Address sizes: 39 bits physical, 48 bits virtual CPU(s): 4 On-line CPU(s) list: 0-3 Thread(s) per core: 2 Core(s) per socket: 2 Socket(s): 1 NUMA node(s): 1 Vendor ID: GenuineIntel CPU family: 6 Model: 78 Model name: Intel(R) Core(TM) i5-6300U CPU @ 2.40GHz Stepping: 3 CPU MHz: 2884.</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 16.筆電環境設定</title>
      <link>http://pollochang.work/post/016-%E7%AD%86%E9%9B%BB%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/016-%E7%AD%86%E9%9B%BB%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/</guid>
      <description>我的Linux生活日記 16.筆電環境設定 Linux 除了安裝在桌面主機或是虛擬中，我已經把Linux 安裝在筆電裡三四年了，儼然已經成了我日常生活的一部分。在使用的經驗，筆電需要設定一些事項在使用上會比較順手，也或許我挑選的發行板是 Debian 相較 Ubuntu 較陽春需要堆花一點心思。
觸控手勢-fusuma 如果你是把Ubuntu安裝在筆記行電腦中，在操作的過程中多窩少少會需要依賴觸控板，這邊我還蠻推薦 fusuma 這套軟體。因為這挑可以自由的設定觸控板手勢。然而在 Gnome 42 以後觸控手勢我覺的已經可以不用另外設定了，預設就已經很好用。
安裝指令如下：
sudo apt-get install libinput-tools sudo apt-get install ruby sudo gem install fusuma sudo apt-get install xdotool gsettings set org.gnome.desktop.peripherals.touchpad send-events enabled mkdir -p ~/.config/fusuma ＃建立觸控板手勢參數檔 vim ~/.config/fusuma/config.yml #設定觸控板手勢 安裝完成之後將設定輸入到 ~/.config/fusuma/config.yml，下面試我自己行慣的設定
swipe: 3: left: command: &amp;#39;xdotool key alt+Left&amp;#39; #上一個歷程 right: command: &amp;#39;xdotool key alt+Right&amp;#39; #下一個歷程 up: command: &amp;#39;xdotool key super+Up&amp;#39; #開新分頁 down: command: &amp;#39;xdotool key super+Down&amp;#39; #關閉程式 4: left: command: &amp;#39;xdotool key super+Right&amp;#39; #將視窗移至右邊 right: command: &amp;#39;xdotool key super+Left&amp;#39; #將視窗移至左邊 up: command: &amp;#39;xdotool key super+a&amp;#39; #顯示應用程式 down: command: &amp;#39;xdotool key super&amp;#39; #顯示概覽 pinch: 2: in: command: &amp;#39;xdotool key ctrl+plus&amp;#39; #縮小 threshold: 0.</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 17.Linux主機選購(一)</title>
      <link>http://pollochang.work/post/017-linux%E4%B8%BB%E6%A9%9F%E9%81%B8%E8%B3%BC/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/017-linux%E4%B8%BB%E6%A9%9F%E9%81%B8%E8%B3%BC/</guid>
      <description>我的Linux生活日記 17.Linux主機選購(一) 今天不探究技術，來講點生活方的問題吧：我想買一台Linux主機在我的家裡用,主機要怎選?
其實會問這句話或是這一類的問題，通常對自己的電腦使用需求有一定的了解程度，但是對硬體方面也許就不太熟悉。
但是在分析這個問題之前，先把需求退回到初始的層次：為什麼要買電腦？
為什麼要買電腦？ 學生時期 我記得在大學的時候有問學校老師，我要買什麼規格的電腦？當時老師就先回問我：我買電腦要做什麼？我回：為了要做作業呀！
做作業 我讀的是資訊傳播學系，在四年的課綱中會學到 修圖、影片剪輯、Java 程式開發、網頁開發、做文書報告等等方面，所以用到的軟體可能有 Adobe photoshop、 Adobe premiere、JDK、Office 等。這邊我是已我過去的經歷做比喻，詳細還是要看各位學校課綱規劃。
玩遊戲 我一直都是坦克世界的愛好者，所以我希望電腦可以玩。
上網 這個不用說了吧，在家一定會打開電腦看影片，螢幕比手機大看得比較爽。(別想歪)
以上就是我在大學時期的主要需求。透過以上需求可以分析會用的軟體
Adobe photoshop Adobe premiere JDK Office 坦克世界 瀏覽器 為了回應依開始的問題 「我想買一台Linux主機在我的家裡用,主機要怎選?」
首先必須先調查上述這些軟體有做 Linux 支援？像是 Adobe 、坦克世界 、MS Office 一定是沒有的。
接下來就是探究沒有做 Linux 支援的話，在 Linux 有對應功能體？像是 Adobe photoshop 是 GIMP、Adobe premiere 是 Kdenlive 或是OpenShot、 MS Office 是 LiberOffice
最後是沒有支援 Linux 的部份。通常知名遊戲或是3A大作只有支援 windows ，像是上面提到的 坦克世界 。
清楚知道哪些軟體可以支援Linux 的狀況後，接下來就是問問自己真的一定只要使用Linux？或許在學生時期用 windows 會比較好，因為可以打很多遊戲。對後面這句話才是重點！因為再大學生時期我有把電腦安裝 ubuntu過，過了三天的新鮮感後就安裝回 windows 了，最大原因是我想打的遊戲只有在windows出現。</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 19.來看看文字編輯工具-vim</title>
      <link>http://pollochang.work/post/019-%E4%BE%86%E7%9C%8B%E7%9C%8B%E6%96%87%E5%AD%97%E7%B7%A8%E8%BC%AF%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/019-%E4%BE%86%E7%9C%8B%E7%9C%8B%E6%96%87%E5%AD%97%E7%B7%A8%E8%BC%AF%E5%B7%A5%E5%85%B7/</guid>
      <description>我的Linux生活日記 19.來看看文字編輯工具-vim 使用電腦一定會用到文字編輯工具，在熟悉的微軟世界是記事本，那在Linux 是什麼呢？Text Editor，是我第一次使用的工具，同時也是Gnome桌面預設的文字編輯工具。不過還有很多種類下就帶大家看看有哪些。
視窗 Gnome Text Editor 這是從 ubuntu 開始接觸 Linux 會碰到的文字編輯工具，功能跟微軟的記事本一樣簡單容易上手，而且也用語法亮度顯示，到現在開發還是會當作輔助工具。
notepadqq 作為一個工程師常常需要打開不同語言的腳本，原本在windows我自己是習慣使用Notepad++，但是踏進linux之後發現Notepad++ 只能透過wine執行，後來我在網路上找到了 notepadqq ，下面是在Debian安裝的方式：
新增下面兩個資套件來源 sudo touch /etc/apt/sources.list.d/notepadqq.list sudo echo &amp;#34;deb http://ppa.launchpad.net/notepadqq-team/notepadqq/ubuntu trusty main&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list.d/notepadqq.list sudo echo &amp;#34;deb-src http://ppa.launchpad.net/notepadqq-team/notepadqq/ubuntu trusty main&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list.d/notepadqq.list 新增公鑰 sudo apt-key adv --recv-key --keyserver keyserver.ubuntu.com 63DE9CD4 更新並安裝 sudo apt update &amp;amp;&amp;amp; sudo apt -y install notepadqq 終端機 vi vi 是大部分 Linux 發行版本在終端機裡一定有的文字編輯工具，級是在最小安裝版本也會有。在使用上有三個模式：
一般模式 進入vi 之後就是一般模式，在這個模式下可以瀏覽文件內容。除了瀏覽文件內容以外還可以進行剪下整行、複製整行等工作
剪下整行: 鍵盤直接輸入 dd
複製整行: 鍵盤直接輸入 yy</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 21.使用者帳號管理</title>
      <link>http://pollochang.work/post/021-%E4%BD%BF%E7%94%A8%E8%80%85%E5%B8%B3%E8%99%9F%E7%AE%A1%E7%90%86/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/021-%E4%BD%BF%E7%94%A8%E8%80%85%E5%B8%B3%E8%99%9F%E7%AE%A1%E7%90%86/</guid>
      <description>我的Linux生活日記 21.使用者帳號管理 今天來簡單說明一下帳號管理的部份，我以 Gnome 的使用介面會比較親進一些。
新增使用者 位置如下
settings &amp;gt;&amp;gt; Details &amp;gt;&amp;gt; Users 到使用者管理頁面之後，需要先解鎖。密碼就是你登入的密碼。
點擊 「add user」
輸入要新增的使用者資訊
點擊 「add」
之後就會出現剛剛新增使用者的資訊在使用者管理頁面中
看完以上，是不是覺得跟在 windows 上一樣簡單。接下來看看剛剛一番操作之後系統發生什麼變化呢？
帳號資訊: /etc/passwd 系統會將使用者資訊紀錄在這個文件中：/etc/passwd
&amp;gt; $ cat /etc/passwd | grep pollochang pollochang❌1001:1001:pollochang,,,:/home/pollochang:/bin/bash 以冒號 : 為分隔欄位
帳號名稱 密碼: 因為密碼都紀錄在 /etc/shadow 文件中，所以這裡是以 x 表示 UID: 使用者在系統的唯一代號 GID: 使用者群組代號 使用者資訊說明欄位 使用者家目錄 使用者預設shell 名稱 密碼資訊: /etc/shadow 以冒號 : 為分隔欄位
root@JamesChangNB:~# cat /etc/shadow | grep pollochang pollochang:$6$JaseGnZpc.VeUeCM$/iu963R2FHzoGV5zBkh390weaQ0osO3wwE54xobUX8I6llYULw/004iL8mvUVAFfq9SraOPBWV97.EgPhslvt.:19269:0:99999:7::: Username(使用者名稱)
Password(密碼): 這裡已經是加密過後資訊
規則為: $[加密方式]$[加鹽]$[值]
加密方式</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 22.系統更新</title>
      <link>http://pollochang.work/post/022-%E7%B3%BB%E7%B5%B1%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/022-%E7%B3%BB%E7%B5%B1%E6%9B%B4%E6%96%B0/</guid>
      <description>我的Linux生活日記 22.系統更新 一套可以應付日常生活工作的Linux 是由不同軟體組成的，只要是人撰寫的程式一定會有 Bug，這些系統問題被修復以後就會需要更新，以下是更新系統的方式。
apt Debian 系列的套件管理工具，Debian 官方網站有詳細的使用方式，這邊我介紹日常生活中常用到的幾個。
更新套件清單 sudo apt update 檢視可以更新的套件 apt list --upgradable 更新套件 sudo apt upgrade 移除已不需要的套件 sudo apt autoremove &amp;gt; $ apt list --upgradable Listing... Done google-chrome-stable/stable 106.0.5249.91-1 amd64 [upgradable from: 106.0.5249.61-1] libhttp-daemon-perl/oldstable 6.01-3+deb10u1 all [upgradable from: 6.01-3] 使用 deb 檔案更新或安裝 sudo apt install ./[安裝檔].deb yum RedHat 系列的套件管理工具
更新所有的套件 這部份等同Debian 的 apt upgrade &amp;amp;&amp;amp; apt autoremove
sudo yum update 檢視可以更新的套件 yum check-update 原機系統升級 我比較少做這種事情，如果是實體機器做系統升級，我是直接重新安裝升級，順便整理電腦。甚至直接買新的硬碟直接安裝。比較不建議原機直接系統升級。主要原因有一個：無法還原到升級之前的狀況。</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 23.防火牆-firewalld</title>
      <link>http://pollochang.work/post/023-%E9%98%B2%E7%81%AB%E7%89%86/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/023-%E9%98%B2%E7%81%AB%E7%89%86/</guid>
      <description>我的Linux生活日記 23.防火牆-firewalld firewalld 今天來跟大家介紹防火牆。在日常生活中還是得設定防火牆確保陌生人不會隨意進入自己的主機中。在Debian 為底的系統中主要是以 ufw(簡易防火牆) 為主，但是在網站系統中我比較會以 firewalld 為主，畢竟在伺服器里都會有一個或是兩個以上的網段、網卡要管理。今天就介紹比較常用的設定方式。
另外在 debian 10 有安裝 KVM 或是 ubuntu 20.04 LTS 有安裝 docker 就不建議使用 firewalld ，因為當前版本會導致KVM 網路 或是 docker 網路異常。此問題在下一個發行版才有獲得解決。
zone-區域簡介 firewalld 的概念事先將網卡劃分區塊(zone)，每張網卡就好比是家裡的每一扇門，而區域就是主臥、客廳、室外。我舉幾個比較常用的區域：
public 顧名思義就是公眾區域，好比家裡的大門是通往外面的世界，逼安只會允許公開的服務接口通過，如：22
trusted 就像是自己房間區域一樣，可以允許所有的連線連接主機裡面的服務。
libvirt libvirt 是比校特殊的區域，主要是處理 KVM 的網路介面。而且只有 KVM 的網路介面可以到此區域，同時KVM 網路介面也無法加入到其他區域。原因可能是是過度階段，未來版本可能就沒有了。
安裝防火牆 Debian Debian 如果要使用firewalld 建議先將預設的防火牆移除在安裝 firewalld
apt remove ufw apt install firewalld CentOS7 yum install firewalld 查詢版本 firewall-cmd --version 新增網卡至特定區域 先查詢網卡 ip addr 設定網卡 sudo firewall-cmd --permanent --zone=trusted --change-interface=eth0 檢視防火牆規則 firewall-cmd --list-all 查詢那協正在運作的 zone firewall-cmd --get-active-zones 重新讀取設定 firewall-cmd --reload 下列範例我都會加 --permanent 永久設置選項，加了此選項必須重新讀取才會生效。如果不加永久選項，執行設定之後就會立刻生效，但是重新開機會是重新啟動 firewalld 就會回到設定前的狀態。</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 25.分享資料夾-nfs Server</title>
      <link>http://pollochang.work/post/025-%E5%88%86%E4%BA%AB%E8%B3%87%E6%96%99%E5%A4%BE-nfsserver/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/025-%E5%88%86%E4%BA%AB%E8%B3%87%E6%96%99%E5%A4%BE-nfsserver/</guid>
      <description>我的Linux生活日記 25.分享資料夾-nfs Server 最近工作上有做目錄共用的功能，主要是 linux 主機間共享目錄而已，所以這邊就順便整理之前的筆記吧！
另外我自己工作主機及自己件的環境是以 Debian為主，所以這邊就附上 Debian 與 CentOS 的用法，原則上使用差異沒有很大。
安裝 CentOS7 sudo yum install nfs-utils Debian 10 sudo apt install nfs-kernel-server nfs-common 啟動服務 CentOS6 service nfs start chkconfig nfs on chkconfig rpcbind on CentOS7 sudo systemctl start rpcbind sudo systemctl restart nfs Debian 10,Oracle Linux 9 sudo systemctl start nfs-server 設定要分享的目錄 假設是 /share 要分享
sudo mkdir -p /share sudo chmod 777 /share 設定文件: /etc/exports # 目標目錄 要分享的IP 使用權限 /share 192.</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 26.分享資料夾-autofs</title>
      <link>http://pollochang.work/post/026-%E5%88%86%E4%BA%AB%E8%B3%87%E6%96%99%E5%A4%BE-autofs/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/026-%E5%88%86%E4%BA%AB%E8%B3%87%E6%96%99%E5%A4%BE-autofs/</guid>
      <description>我的Linux生活日記 26.分享資料夾-autofs 昨天已經安裝完 nfs server 接下來就是其他主機安裝端點工具啦！有兩個處理方式：mount 以及 autofs。
mount mount 指令如下：
madir -p /mnt/nfs/centos7 mount 192.168.56.173:/share /mnt/nfs/centos7 但是不建議這樣做，主要是網路不通無法掛載遠端目錄時會在成PRC服務逾時，間接拖垮系統效能。接下來是建議使用 autofs 掛載目錄。
安裝 Debian sudo apt install autofs CentOS7 sudo yum install autofs 編輯設定文件 這邊我直接新增文件，如果沒有 /etc/auto.master.d 這個目錄可以進入 /etc/auto.master 這份文件直接編輯
/etc/auto.master.d/jc-share.autofs # [掛載目錄] [遠端配置文件] [參數] /mnt/nfs /etc/jc-share.nfs --timeout=10 上述文件中 /mnt/nfs 不需要特別新增，autofs會在掛載時自動處理。
/etc/jc-share.nfs # [資料夾名稱] [掛載參數] [遠端主機分享目錄] centos7 -fstype=nfs,vers=4,rw 192.168.56.173:/share 測試 sudo automount -f -v 失敗畫面 Starting automounter version 5.1.2, master map /etc/auto.master using kernel protocol version 5.</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 27.分享資料夾-windows client for nfs</title>
      <link>http://pollochang.work/post/027-%E5%88%86%E4%BA%AB%E8%B3%87%E6%96%99%E5%A4%BE-windowsclientfornfs/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/027-%E5%88%86%E4%BA%AB%E8%B3%87%E6%96%99%E5%A4%BE-windowsclientfornfs/</guid>
      <description>我的Linux生活日記 27.分享資料夾-windows client for nfs 昨天介紹了 autofs，但是Linux 要與 windows 共享目錄時，通常會使用 samba 工具。其實 windows 現在也可以讀取nfs Server 共享目錄。
以下用 windows server 2019 做示範。
安裝 開啟 Server Manager 點擊 add roles and features 點擊 Role-based or feature-based installation 選取要設定的伺服器 勾選 Client for NFS 點擊 install 設定 # mount.exe [IP]:/[分享路徑] [掛載磁碟] mount.exe 192.168.56.173:/share E:\ 已知問題 在不同類型 檔名/目錄 打中文名稱會出現亂碼。
參考資料 Configure NFS Client on Windows Server 2019</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 28.KVM</title>
      <link>http://pollochang.work/post/028.kvm/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/028.kvm/</guid>
      <description>我的Linux生活日記 28.KVM 在 Linux 中可以透過建立 KVM「核心基礎虛擬機器 (Kernel-based Virtual Machine；KVM）」 建立不同作業系統環境，無論是 RedHat 、Debian 或是 windows 都可以建立。在學習 Linux 的過程是不錯的學習工具。
啟動 CPU 虛擬化技術 這部份需要進入 BIOS 開啟，AMD 是 VT , Intel 是 VT-x、VT-d 或 VT-c 。
檢查硬體資源是否支援 虛擬技術 啟動之後可以下指令檢查
grep --color --perl-regexp &amp;#39;vmx|svm&amp;#39; /proc/cpuinfo 安裝 安裝指令 sudo apt -y install qemu-system libvirt-clients libvirt-daemon-system qemu-kvm libvirt-daemon bridge-utils virtinst virt-manager libosinfo-bin osinfo-db-tools sudo systemctl enable libvirtd 使用 vhost_net 模組 sudo modprobe vhost_net 設定網路 sudo virsh net-start default sudo virsh net-autostart default 新增 KVM 權限 sudo usermod -G libvirt-qemu pollochang sudo usermod -G libvirt pollochang KVM 更新OS清單 sudo apt install libosinfo-bin osinfo-db-tools wget -O &amp;#34;/tmp/osinfo-db.</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 29.如何從小使用Linux</title>
      <link>http://pollochang.work/post/029-%E5%A6%82%E4%BD%95%E5%BE%9E%E5%B0%8F%E4%BD%BF%E7%94%A8linux/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/029-%E5%A6%82%E4%BD%95%E5%BE%9E%E5%B0%8F%E4%BD%BF%E7%94%A8linux/</guid>
      <description>我的Linux生活日記 29.如何從小使用Linux 今天這個主題來討論電腦教育吧。小朋友依開始接觸電腦作業系統有百分之六十以上的機率會是windows ，學校預先安裝、教學的也是。至少從我以前小學三年級開始，教室後面的安裝的作業系統就是windows98，每當下課時就會等待電腦開機，和三四位同學共八支手擠在104K的鍵盤上完小朋友期打交。到大學作業畢業的期末報告必須使用 MS Office 產出 docx 格式。這邊我想闡述的是，打從我從小接觸電腦的一開始到大學畢業這段求學期間，在認識電腦的領域方面已經被微軟給統治了。不過我今天也沒有想要牴觸或是說他不好，只是想要怎讓在求學的學生認識其他作業系統/平台。
以家長的身份，我敢說我是有能力讓我自己的小朋友認識Linux ，有能力打造不同作業平台的作業環境，從桌面系統，我可以使用 Gnome、文書可以使用 Liber Office等等，讓小朋友接觸不同的平台。
在學校，可以在電腦教室中分別安裝不同類型的作業系統、在課程設計上可以往跨平台的軟體方向設計。
這樣的學習環境設計，可以讓學生多接觸不同的作業系統，探索不同的操作模式。未來成人後，也不會被單一的軟體給綁住使用電腦的模式。
Linux 不只單單在伺服器領域發展而已，在桌面應用領域其實也有。操作的流暢度其實不輸給 windows。還記得以前在玩 ubuntu 14.04 時很常遇到應外程式清單卡住甚必須重啟 x-window 才有辦法解決。現在的狀況已經沒有。在操作上 Gnome 的桌面越來越偏向 Mac OS ，而 xfce 很輕巧、很自由？ KDE 嘛～感覺就是 KDE，有他的專屬風格。一個平台上有不同操作風格是 windows、Mac OS 沒有的。這是優點也是缺點。缺點是在設計課程時必須花費心思把操作模式專注在一項，或是探究共通的操作教育 command line 就解決了 。在軟體操作設計上有可能會增加設計、開發難度 通通給我上雲端 。也許這是自由的代價，必須等使用者、開發者、設計者等既得利益者協調完才有最佳的處理方式，也許這一天永遠等不到但是會在每次新的發行版次中一步一步更接近所有人的期望。
目前安裝Linux 作業系統到使用他的桌面環境，其實不會很難上手。安裝上其實可以簡單的按下一步完成安裝，桌面使用上也不太接觸到臭蟲。一個平台越多人使用，在未來他的操作有可能更人性化、系統問題有可能會更少。所以別害怕使用少眾(至少在桌面領域上市這樣)的平台，也別被單一一種平台給限制住作業方向。
掰完這個主題內容了，發現教育這一塊對我來說，好陌生。為什麼匯寫這篇呢？就只是和我另一伴的完笑話。</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 30.學習資源</title>
      <link>http://pollochang.work/post/030-%E5%AD%B8%E7%BF%92%E8%B3%87%E6%BA%90/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/030-%E5%AD%B8%E7%BF%92%E8%B3%87%E6%BA%90/</guid>
      <description>我的Linux生活日記 30.學習資源 今天是最後一天了，連續發文30天真的不容易，過程中需要排除萬難騰出寶貴的時間寫。最後一天就來寫我自己的學習資源吧！
打造學習環境 學習Linux，首先必須想辦法把環境建立起來，讀在多的理論知識知道再多的指令，沒有一個環境去實做永遠都是資訊或是紙上的文字紀錄而已。必須將所得到的紀錄、技術資訊實做一遍才會知道遺漏了哪些技術細節。以 rsync 指令為例。例如需要將本機的 /home/tomcat/catalina 底下所有的文件同步到 192.168.56.2 的相同目錄中，在網路上找到的資訊後所下的指令是 rsync -ruptl /home/tomcat/catalina tomcat@192.168.56.2:/home/tomcat/catalina 但是會發現無法正常運作。可能會出現不同類型的錯誤，如目標主機沒有安裝 rsync 套件、主機網路環境有阻擋 port 22、目標主機目錄權限不足等等。上述這些狀況必須在實做上才會知道。
另外在學習的過程中一定會出現失敗，或是想知道別人說絕對不能下的指令，如：sudo rm -rf /。沒有允須失敗的環境是很難放心執行所學到的新事物。這時虛擬環境就很重要了。如今虛擬環境已經可以不用像以前一樣安裝虛擬機器，如：KVM、VirtualBox、VMware。用Docker 就可以實現Linux不同發行板版本，虛擬環境建置成本低很多。當然虛擬機還是有他的價值在，快照就是 docker 無法達成的項目。
網路資源 在操作上有問題最快尋找解答的方式就是透過搜尋引擎尋找，但是要確保資訊正確需要經過數月甚至幾年的經驗累積。以下是大家公認上，在學習Linux 資訊品質比較好的網站。
鳥哥的 Linux 私房菜 網站：https://linux.vbird.org/
鳥哥大大沒有人會質疑吧！在架設伺服器方面，鳥站是不錯的學習資源，重點是品質很好的中文學習資源。
SUSE Linux Enterprise Server 管理指南 網站：https://documentation.suse.com/zh-tw/sles/15-SP2/html/SLES-all/book-sle-admin.html
Product Documentation for Red Hat Enterprise Linux SUSE Linux 、Red Hat 官方網站也是很好的學習資源，而且可以切換成 英文/中文 介面。可以透過中英對照習得英文原文的術語，未來在面對問題時可以更快獲得解決問題的資訊。
Debian 參考手冊 Debian 官方的中文手冊，內容是很豐富的。
軟體資源 centos centos 已經算是進入產品生命週期的終點，但是未來的10年內仍然會有他的身影。
debian
Kernel.org git repositories
想知道linux 是哪些軟體組成的嗎？Kernel.org 可以讓你一探究竟。</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 31.ssh登入信息-ssh login banner</title>
      <link>http://pollochang.work/post/031-ssh%E7%99%BB%E5%85%A5%E4%BF%A1%E6%81%AF-ssh-login-banner/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/031-ssh%E7%99%BB%E5%85%A5%E4%BF%A1%E6%81%AF-ssh-login-banner/</guid>
      <description>我的Linux生活日記 31.ssh登入信息-ssh login banner 範本 /etc/profile.d/ssh-login-info.sh #!/bin/sh # # @Time : 2023-09-14 # @Author : PolloChang # @Desc : ssh login banner export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin shopt -q login_shell &amp;amp;&amp;amp; : || return 0 # os upSeconds=&amp;#34;$(cut -d. -f1 /proc/uptime)&amp;#34; secs=$((${upSeconds}%60)) mins=$((${upSeconds}/60%60)) hours=$((${upSeconds}/3600%24)) days=$((${upSeconds}/86400)) UPTIME_INFO=$(printf &amp;#34;%d days, %02dh %02dm %02ds&amp;#34; &amp;#34;$days&amp;#34; &amp;#34;$hours&amp;#34; &amp;#34;$mins&amp;#34; &amp;#34;$secs&amp;#34;) if [ -f /etc/oracle-release ] ; then PRETTY_NAME=$(&amp;lt; /etc/oracle-release) elif [ -f /etc/oracle-release ] ; then PRETTY_NAME=$(&amp;lt; /etc/redhat-release) elif [ -f /etc/debian_version ]; then DIST_VER=$(&amp;lt;/etc/debian_version) PRETTY_NAME=&amp;#34;$(grep PRETTY_NAME /etc/os-release | sed -e &amp;#39;s/PRETTY_NAME=//g&amp;#39; -e &amp;#39;s/&amp;#34;//g&amp;#39;) ($DIST_VER)&amp;#34; else PRETTY_NAME=$(cat /etc/*-release | grep &amp;#34;PRETTY_NAME&amp;#34; | sed -e &amp;#39;s/PRETTY_NAME=//g&amp;#39; -e &amp;#39;s/&amp;#34;//g&amp;#39;) fi if [[ -d &amp;#34;/system/app/&amp;#34; &amp;amp;&amp;amp; -d &amp;#34;/system/priv-app&amp;#34; ]]; then model=&amp;#34;$(getprop ro.</description>
    </item>
    
    <item>
      <title>我的Linux生活日記 Debian 使用心得-2022.04</title>
      <link>http://pollochang.work/post/005-debian_%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/005-debian_%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</guid>
      <description>我的Linux生活日記 Debian 使用心得-2022.04 tags: 我的linux日常生活 Debian 當初會接觸Debian 這個作業系統是因為我想找一個穩定的發行板，也確實Debian 相比Ubuntu 穩定很多，很少在更新作業系統後出現問題。
踏入Debian 初期，常常發現有驅動軟體安裝不了，例如：intel wifi 、nVidia 顯卡驅動程式等等。後來才發現是這個自由社群的政策，同時也漸漸理解何謂是 free、none-free。但對於一個一個平凡的使用者來說，可以順順的用就好了，
後來也有嘗試使用test版本。Test 版本也算穩定，我自己是在筆記型電腦安裝 bookworm 測試版本。在某次的更新過後，出現了藍芽無法啟用、新酷音輸入法無法輸入注音，對於把筆電當作生產力工具的我是無法忍受的事情，最後只能安裝Debian buster。
下列是 Debian buster 、Debian bullseye 、Debian bookworm 一點心得
Debian buster 這個版本我覺的是三個中，最穩定的版本。穩定其實也是預設的軟體相對比較舊所換來的。如果要使用比較新穎的功能就無法。
目前，這個版本比較適合安裝在我自己的生產力筆記型電腦中，因為這三者中是最穩定的。
Debian bullseye 目前我自己的工作主機是使用這個版本，會挑這個版本原因是我有買較新的硬體設備(2011.02自己組的主機)，在這個版本自帶的驅動程式比 buster 相較穩定。
Debian bookworm 在我的筆記型電腦有一段時間是安裝這個版本。會挑選這個主因是看上 Gnome 40 自帶的觸控版操做模式，但是目前正在測試階段，在某次更新後藍芽、注音輸入法接無法操作後就安裝回 buster 版本。
但不得不說這個版本在筆電上有很好的電耗比，我曾經在電池滿格狀況下忘記關機，待機一天也只掉50%，而在 buster 卻掉了80%。
等到 bookworm 轉為 stable 時，我會想升級到這個版本。
以上是我使用 Debian 一點小小心得。繼續加班 m)&amp;hellip;QAQ&amp;hellip;(m</description>
    </item>
    
    <item>
      <title>輸入法相關</title>
      <link>http://pollochang.work/post/2024-02-28-%E8%BC%B8%E5%85%A5%E6%B3%95%E7%9B%B8%E9%97%9C/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E8%BC%B8%E5%85%A5%E6%B3%95%E7%9B%B8%E9%97%9C/</guid>
      <description>設定中文輸入法 在windows時我習慣是使用微軟新注音輸入法，轉到Linux 的替代方案是新酷音。以下是我安裝新酷音的步驟。
至於輸入法框架，因為是使用 Gnome 桌面系統，在試過 fcitx 與 ibus 之後，最後是 ibus 比較能再大多數軟體上正常運作。fcitx 在有些時候會出現閃退或無法輸入中文字的狀況，至於是什麼原因就沒有仔細探究。
設定中文語系 sudo apt install locales-all sudo dpkg-reconfigure locales 選擇語系編碼 選擇主要語系 這邊我習慣選擇 en_US.UTF8，讓系統介面顯示英文為主。
選擇完之後系統就會自動開始設定。 ❯ sudo dpkg-reconfigure locales Generating locales (this might take a while)... en_US.UTF-8... done zh_TW.BIG5... done zh_TW.EUC-TW... done zh_TW.UTF-8... done Generation complete. 安裝新酷音 sudo apt install ibus-chewing chewing-editor 新酷音字詞編輯工具 sudo apt install chewing-editor liber-office 中文介面 sudo apt install libreoffice-l10n-zh-tw 下載新酷音詞庫 這邊我直接分享給大家我的檔案吧，這是我平時會使用的詞彙。
匯入新酷音詞庫 開啟剛剛安裝的 chewing-editor 按下匯入就可以了。</description>
    </item>
    
    <item>
      <title>關閉IPv6</title>
      <link>http://pollochang.work/post/2024-02-28-%E9%97%9C%E9%96%89ipv6/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E9%97%9C%E9%96%89ipv6/</guid>
      <description> 設定文件: /etc/sysctl.conf net.ipv6.conf.all.disable_ipv6 = 1 net.ipv6.conf.default.disable_ipv6 = 1 net.ipv6.conf.lo.disable_ipv6 = 1 讓設定生效
sudo sysctl -p 檢驗
ip a | grep inet6 參考資料 關閉 Ubuntu 的 Ipv6 </description>
    </item>
    
    <item>
      <title>windows ssh key 登入 Linux</title>
      <link>http://pollochang.work/worknot/windows-ssh-key-login/</link>
      <pubDate>Wed, 15 Nov 2023 20:53:54 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/windows-ssh-key-login/</guid>
      <description>先產生 ssh 金鑰
ssh-keygen 將公鑰上傳到目標主機
type $env:USERPROFILE\.ssh\id_rsa.pub | ssh {account}@{IP-ADDRESS-OR-FQDN} &amp;#34;cat &amp;gt;&amp;gt; .ssh/authorized_keys&amp;#34; </description>
    </item>
    
  </channel>
</rss>
